#include "$VRAY_UI_DS_PATH/vfh_macros.ds"

/*
groupsimple {
    name "VrayRendererFolderUIStyle"
    label "UI"
    VRAY_TAG_PARM

    parm {
        name "ui_style"
        label "Style"
        type string
        menu {
            0 "Simple"
            1 "Advanced"
        }
        default { "1" }
        VRAY_TAG_PARM
    }
}
*/

#ifndef VRAY_UI_IPR
groupsimple {
    name "VRayRendererFolderDriverProduction"
    label "Production"

    parm {
        name "render_render_mode"
        label "Device"
        type string
        menu {
            0 "CPU"
            1 "GPU (CUDA)"
            2 "GPU (OpenCL)"
        }
        default { "0" }
        VFH_TAG_VRAY
    }

    parm {
        name "gpu_device_select"
        label "GPU Devices"
        type button
        hidewhen "{ render_render_mode == 0 }"
    }
}
#endif

groupsimple {
    name "VRayRendererFolderDriverIPR"
    label "IPR"

    parm {
        name "render_rt_mode"
        label "Device"
        type string
        menu {
            0 "CPU"
            1 "GPU (CUDA)"
            2 "GPU (OpenCL)"
        }
        default { "0" }
        VFH_TAG_VRAY
    }

    VFH_UI_PARM_TOGGLE("vfh_use_camera_settings", "Use Physical Camera Settings for Viewport IPR", "", 1)

#ifndef VRAY_UI_IPR
    parm {
        name "render_rt"
        label "Render RT"
        type button
        hidewhen "{ render_rt_output == "0" } { render_rt_update_mode == "1" }"
        VFH_TAG_VRAY
    }
#endif
}

#ifndef VRAY_UI_IPR
groupsimple {
    name "VRayRendererFolderDriverProductionCloud"
    label "Cloud"

    VFH_UI_PARM_TOGGLE("render_in_cloud", "Submit To Cloud", "Submit job to V-Ray Cloud", 0)

    parm {
        name "cloud_project_name"
        label "Project"
        help "Cloud project name"
        type string
        default { "VRayForHoudini" }
        VFH_DISABLE_WHEN_PARAM_FALSE("render_in_cloud")
        VFH_TAG_VRAY
    }

    parm {
        name "cloud_job_name"
        label "Job"
        help "Cloud job name"
        type string
        default { "${HIPNAME}" }
        VFH_DISABLE_WHEN_PARAM_FALSE("render_in_cloud")
        VFH_TAG_VRAY
    }
}
#endif

groupsimple {
    name "VRayRendererFolderDriverExport"
    label "Export Settings"

    parm {
        name "exporter_log_level"
        label "Log Level"
        type string
        menu {
            "0" "Errors"
            "1" "Debug"
        }
        default { "0" }
        VFH_TAG_VRAY
    }

#ifndef VRAY_UI_IPR
    parm {
        name "render_export_mode"
        label "Export Mode"
        type string
        menu {
            0 "No Export"
            1 "Export & Render"
            2 "Export"
        }
        default { "0" }
        VFH_TAG_VRAY
    }

    parm {
        name "render_export_filepath"
        label "Export Filepath"
        type file
        default { "${HIP}/${HIPNAME}.vrscene" }
        disablewhen "{ render_export_mode == 0 }"
        VFH_TAG_VRAY
    }

    parm {
        name    "exp_compressed"
        label   "Export Compressed Data"
        type    toggle
        default { "1" }
        disablewhen "{ render_export_mode == 0 }"
        VFH_TAG_VRAY
    }

    parm {
        name    "exp_hexdata"
        label   "Export Data In Hex Format"
        type    toggle
        default { "1" }
        disablewhen "{ render_export_mode == 0 }"
        hidewhen "{ exp_compressed == 1 }"
        VFH_TAG_VRAY
    }

    parm {
        name    "exp_hextm"
        label   "Export Transforms In Hex Format"
        type    toggle
        default { "1" }
        disablewhen "{ render_export_mode == 0 }"
        hidewhen "{ exp_compressed == 1 }"
        VFH_TAG_VRAY
    }
#endif
}
