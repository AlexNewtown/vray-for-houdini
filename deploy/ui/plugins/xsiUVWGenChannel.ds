{
    name	parameters
    parm {
	name	"plugindata"
	label	"Channel (XSI)"
	type	data
	invisible
	default	{ "0" }
	range	{ 0 1 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_type" "UVWGEN" }
    }
    groupsimple {
	name	"uvw_transform"
	label	"Uvw Transform"
	grouptag	{ "vray_plugin" "xsiUVWGenChannel" }
	grouptag	{ "vray_pluginattr" "uvw_transform" }
	grouptag	{ "vray_type" "Transform" }

	parm {
	    name	"uvw_transform_xOrd"
	    label	"Transform Order"
	    type	ordinal
	    default	{ "0" }
	    menu	{
		"srt"	"Scale Rotate Translate"
		"str"	"Scale Translate Rotate"
		"rst"	"Rotate Scale Translate"
		"rts"	"Rotate Translate Scale"
		"tsr"	"Translate Scale Rotate"
		"trs"	"Translate Rotate Scale"
	    }
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"uvw_transform_rOrd"
	    label	"Rotation Order"
	    type	ordinal
	    default	{ "0" }
	    menu	{
		"xyz"	"Rx Ry Rz"
		"xzy"	"Rx Rz Ry"
		"yxz"	"Ry Rx Rz"
		"yzx"	"Ry Rz Rx"
		"zxy"	"Rz Rx Ry"
		"zyx"	"Rz Ry Rx"
	    }
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"uvw_transform_trans"
	    label	"Translate"
	    type	float
	    size	3
	    default	{ "0" "0" "0" }
	    help	"Initial transformation on the uvw coordinates, before mirror, crop etc"
	    range	{ 0 10 }
	    export	none
	}
	parm {
	    name	"uvw_transform_rot"
	    label	"Rotate"
	    type	angle
	    size	3
	    default	{ "0" "0" "0" }
	    help	"Initial transformation on the uvw coordinates, before mirror, crop etc"
	    range	{ 0 10 }
	    export	none
	}
	parm {
	    name	"uvw_transform_scale"
	    label	"Scale"
	    type	float
	    size	3
	    default	{ "1" "1" "1" }
	    help	"Initial transformation on the uvw coordinates, before mirror, crop etc"
	    range	{ 0 10 }
	    export	none
	}
	parm {
	    name	"uvw_transform_pivot"
	    label	"Pivot"
	    type	float
	    size	3
	    default	{ "0" "0" "0" }
	    help	"Initial transformation on the uvw coordinates, before mirror, crop etc"
	    range	{ 0 10 }
	    export	none
	}
    }

    groupsimple {
	name	"uvw_transform_tex"
	label	"Uvw Transform Tex"
	grouptag	{ "vray_plugin" "xsiUVWGenChannel" }
	grouptag	{ "vray_pluginattr" "uvw_transform_tex" }
	grouptag	{ "vray_type" "TextureTransform" }

	parm {
	    name	"uvw_transform_tex_xOrd"
	    label	"Transform Order"
	    type	ordinal
	    default	{ "0" }
	    menu	{
		"srt"	"Scale Rotate Translate"
		"str"	"Scale Translate Rotate"
		"rst"	"Rotate Scale Translate"
		"rts"	"Rotate Translate Scale"
		"tsr"	"Translate Scale Rotate"
		"trs"	"Translate Rotate Scale"
	    }
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"uvw_transform_tex_rOrd"
	    label	"Rotation Order"
	    type	ordinal
	    default	{ "0" }
	    menu	{
		"xyz"	"Rx Ry Rz"
		"xzy"	"Rx Rz Ry"
		"yxz"	"Ry Rx Rz"
		"yzx"	"Ry Rz Rx"
		"zxy"	"Rz Rx Ry"
		"zyx"	"Rz Ry Rx"
	    }
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"uvw_transform_tex_trans"
	    label	"Translate"
	    type	float
	    size	3
	    default	{ "0" "0" "0" }
	    range	{ 0 10 }
	    export	none
	}
	parm {
	    name	"uvw_transform_tex_rot"
	    label	"Rotate"
	    type	angle
	    size	3
	    default	{ "0" "0" "0" }
	    range	{ 0 10 }
	    export	none
	}
	parm {
	    name	"uvw_transform_tex_scale"
	    label	"Scale"
	    type	float
	    size	3
	    default	{ "1" "1" "1" }
	    range	{ 0 10 }
	    export	none
	}
	parm {
	    name	"uvw_transform_tex_pivot"
	    label	"Pivot"
	    type	float
	    size	3
	    default	{ "0" "0" "0" }
	    range	{ 0 10 }
	    export	none
	}
    }

    groupsimple {
	name	"tex_transform"
	label	"Tex Transform"
	grouptag	{ "vray_plugin" "xsiUVWGenChannel" }
	grouptag	{ "vray_pluginattr" "tex_transform" }
	grouptag	{ "vray_type" "Transform" }

	parm {
	    name	"tex_transform_xOrd"
	    label	"Transform Order"
	    type	ordinal
	    default	{ "0" }
	    menu	{
		"srt"	"Scale Rotate Translate"
		"str"	"Scale Translate Rotate"
		"rst"	"Rotate Scale Translate"
		"rts"	"Rotate Translate Scale"
		"tsr"	"Translate Scale Rotate"
		"trs"	"Translate Rotate Scale"
	    }
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"tex_transform_rOrd"
	    label	"Rotation Order"
	    type	ordinal
	    default	{ "0" }
	    menu	{
		"xyz"	"Rx Ry Rz"
		"xzy"	"Rx Rz Ry"
		"yxz"	"Ry Rx Rz"
		"yzx"	"Ry Rz Rx"
		"zxy"	"Rz Rx Ry"
		"zyx"	"Rz Ry Rx"
	    }
	    range	{ 0 1 }
	    export	none
	}
	parm {
	    name	"tex_transform_trans"
	    label	"Translate"
	    type	float
	    size	3
	    default	{ "0" "0" "0" }
	    help	"Final transformation on the resulting uvw coordinates, after mirror, crop etc"
	    range	{ 0 10 }
	    export	none
	}
	parm {
	    name	"tex_transform_rot"
	    label	"Rotate"
	    type	angle
	    size	3
	    default	{ "0" "0" "0" }
	    help	"Final transformation on the resulting uvw coordinates, after mirror, crop etc"
	    range	{ 0 10 }
	    export	none
	}
	parm {
	    name	"tex_transform_scale"
	    label	"Scale"
	    type	float
	    size	3
	    default	{ "1" "1" "1" }
	    help	"Final transformation on the resulting uvw coordinates, after mirror, crop etc"
	    range	{ 0 10 }
	    export	none
	}
	parm {
	    name	"tex_transform_pivot"
	    label	"Pivot"
	    type	float
	    size	3
	    default	{ "0" "0" "0" }
	    help	"Final transformation on the resulting uvw coordinates, after mirror, crop etc"
	    range	{ 0 10 }
	    export	none
	}
    }

    parm {
	name	"nsamples"
	label	"Nsamples"
	type	integer
	default	{ "0" }
	help	"Number of uvw transform samples"
	range	{ 0 64 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "nsamples" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"wrap_u"
	label	"Wrap U"
	type	integer
	default	{ "0" }
	help	"0 - no wrapping, 1 - wrap, 2 - mirror tile"
	range	{ 0 64 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "wrap_u" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"wrap_v"
	label	"Wrap V"
	type	integer
	default	{ "0" }
	help	"0 - no wrapping, 1 - wrap, 2 - mirror tile"
	range	{ 0 64 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "wrap_v" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"wrap_w"
	label	"Wrap W"
	type	integer
	default	{ "0" }
	help	"0 - no wrapping, 1 - wrap, 2 - mirror tile"
	range	{ 0 64 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "wrap_w" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"crop_u"
	label	"Crop U"
	type	integer
	default	{ "0" }
	help	"1 to crop in the u-direction"
	range	{ 0 64 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "crop_u" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"crop_v"
	label	"Crop V"
	type	integer
	default	{ "0" }
	help	"1 to crop in the v-direction"
	range	{ 0 64 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "crop_v" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"crop_w"
	label	"Crop W"
	type	integer
	default	{ "0" }
	help	"1 to crop in the w-direction"
	range	{ 0 64 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "crop_w" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"coverage"
	label	"Coverage"
	type	direction
	size	3
	default	{ "1" "1" "1" }
	help	"Coverage"
	range	{ 0 10 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "coverage" }
	parmtag	{ "vray_type" "Vector" }
    }
    parm {
	name	"wrap_mode"
	label	"Wrap Mode"
	type	integer
	default	{ "0" }
	help	"Wrap mode (0 - wrap on 0.5 boundary; 1 - wrap on integer boundary"
	menu	{
	    "On 0.5 boundary"	"On 0.5 boundary"
	    "On integer boundary"	"On integer boundary"
	}
	range	{ 0 64 }
	export	none
	parmtag	{ "vray_enumkeys" "0,1" }
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "wrap_mode" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"duvw_scale"
	label	"Duvw Scale"
	type	float
	default	{ "1" }
	help	"Additional scale factor for the texture derivatives"
	range	{ 0 64 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "duvw_scale" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"uvw_channel"
	label	"Uvw Channel"
	type	integer
	default	{ "1" }
	range	{ 0 64 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "uvw_channel" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"channel_type"
	label	"Channel Type"
	type	integer
	default	{ "0" }
	help	"Type of the channel used. 0 - uvw, 1 - vertex colors"
	range	{ 0 64 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "channel_type" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"uvwgen"
	label	"Uvwgen"
	type	oppath
	default	{ "" }
	help	"Optional UVWGen from which the initial uvw coordinates will be taken, instead of the surface point"
	range	{ 0 1 }
	export	none
	parmtag	{ "oprelative" "." }
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "uvwgen" }
	parmtag	{ "vray_type" "Object" }
    }
    parm {
	name	"u_alternate"
	label	"U Alternate"
	type	integer
	default	{ "0" }
	help	"alternate image in u direction"
	range	{ 0 64 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "u_alternate" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"v_alternate"
	label	"V Alternate"
	type	integer
	default	{ "0" }
	help	"alternate image in v direction"
	range	{ 0 64 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "v_alternate" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"x_remapMin"
	label	"X Remapmin"
	type	float
	default	{ "0" }
	help	"min remap in x direction"
	range	{ 0 64 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "x_remapMin" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"y_remapMin"
	label	"Y Remapmin"
	type	float
	default	{ "0" }
	help	"min remap in y direction"
	range	{ 0 64 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "y_remapMin" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"z_remapMin"
	label	"Z Remapmin"
	type	float
	default	{ "0" }
	help	"min remap in z direction"
	range	{ 0 64 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "z_remapMin" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"x_remapMax"
	label	"X Remapmax"
	type	float
	default	{ "1" }
	help	"max remap in x direction"
	range	{ 0 64 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "x_remapMax" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"y_remapMax"
	label	"Y Remapmax"
	type	float
	default	{ "1" }
	help	"max remap in y direction"
	range	{ 0 64 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "y_remapMax" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"z_remapMax"
	label	"Z Remapmax"
	type	float
	default	{ "1" }
	help	"max remap in z direction"
	range	{ 0 64 }
	export	none
	parmtag	{ "vray_plugin" "xsiUVWGenChannel" }
	parmtag	{ "vray_pluginattr" "z_remapMax" }
	parmtag	{ "vray_type" "float" }
    }
}
