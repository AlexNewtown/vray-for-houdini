{
    name	parameters
    group {
	name	"TexNoiseMaya"
	label	"Noise (Maya)"

	parm {
	    name	"plugindata"
	    label	"Noise (Maya)"
	    type	data
	    invisible
	    default	{ "0" }
	    help	"TexNoiseMaya"
	    range	{ 0 1 }
	    export	none
	    parmtag	{ "vray_plugin" "TexNoiseMaya" }
	    parmtag	{ "vray_type" "TEXTURE" }
	}
	group {
	    name	"folder"
	    label	"Common"

	    parm {
		name	"compatibility_with"
		label	"Compatibility with"
		type	ordinal
		default	{ "0" }
		help	"This is used to differentiate between textures exported from different applications"
		menu	{
		    "0"	"Max"
		    "1"	"Maya"
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "compatibility_with" }
		parmtag	{ "vray_type" "int" }
	    }
	    parm {
		name	"alpha_from_intensity"
		label	"Alpha from intensity"
		type	ordinal
		default	{ "2" }
		help	"If 2 - the alpha is forced to 1.0f; 1 - the resulting alpha is the color intensity (if compatibility_with is 0) or the color luminance (if compatibility_with is 1); 0 - the alpha is taken from the bitmap alpha"
		menu	{
		    "0"	"Bitmap alpha"
		    "1"	"Color intensity/luminance"
		    "2"	"Force opaque"
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "alpha_from_intensity" }
		parmtag	{ "vray_type" "int" }
	    }
	    parm {
		name	"invert"
		label	"Invert"
		type	toggle
		default	{ "0" }
		help	"If true, the resulting texture color will be inverted"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "invert" }
		parmtag	{ "vray_type" "boolean" }
	    }
	    parm {
		name	"invert_alpha"
		label	"Invert alpha"
		type	toggle
		default	{ "1" }
		help	"If true and invert is on, the resulting texture alpha will be inverted too. If false, just the color will be inverted"
		disablewhen	"{ invert != 1 }"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "invert_alpha" }
		parmtag	{ "vray_type" "boolean" }
	    }
	    parm {
		name	"color_mult"
		label	"Color mult"
		type	color4
		size	4
		default	{ "1" "1" "1" "1" }
		help	"A multiplier for the texture color"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "color_mult" }
		parmtag	{ "vray_type" "Texture" }
	    }
	    parm {
		name	"color_offset"
		label	"Color offset"
		type	color4
		size	4
		default	{ "0" "0" "0" "0" }
		help	"An additional offset for the texture color"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "color_offset" }
		parmtag	{ "vray_type" "Texture" }
	    }
	    parm {
		name	"alpha_mult"
		label	"Alpha mult"
		type	float
		default	{ "1" }
		help	"A multiplier for the texture alpha"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "alpha_mult" }
		parmtag	{ "vray_type" "TextureFloat" }
	    }
	    parm {
		name	"alpha_offset"
		label	"Alpha offset"
		type	float
		default	{ "0" }
		help	"An additional offset for the texture alpha"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "alpha_offset" }
		parmtag	{ "vray_type" "TextureFloat" }
	    }
	    parm {
		name	"nouvw_color"
		label	"No UVs Color"
		type	color4
		size	4
		default	{ "0.5" "0.5" "0.5" "1" }
		help	"The color when there are no valid uvw coordinates"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "nouvw_color" }
		parmtag	{ "vray_type" "Texture" }
	    }
	}

	group {
	    name	"folder2"
	    label	"Mapped"

	    parm {
		name	"uvwgen"
		label	"Uvwgen"
		type	oppath
		default	{ "" }
		help	"The uvw generator for the texture"
		range	{ 0 1 }
		export	none
		parmtag	{ "oprelative" "." }
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "uvwgen" }
		parmtag	{ "vray_type" "Object" }
	    }
	    parm {
		name	"use_3d_mapping"
		label	"Use 3d mapping"
		type	toggle
		default	{ "0" }
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "use_3d_mapping" }
		parmtag	{ "vray_type" "boolean" }
	    }
	    parm {
		name	"wrap"
		label	"Wrap"
		type	toggle
		default	{ "1" }
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "wrap" }
		parmtag	{ "vray_type" "boolean" }
	    }
	    parm {
		name	"placement_type"
		label	"Placement type"
		type	ordinal
		default	{ "2" }
		help	"The way the valid portion of the texture is applied: 0 - the whole texture is valid, 1 - crop, 2 -place"
		menu	{
		    "0"	"Whole texture is valid"
		    "1"	"Crop"
		    "2"	"Place"
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "placement_type" }
		parmtag	{ "vray_type" "int" }
	    }
	    parm {
		name	"u"
		label	"U"
		type	float
		default	{ "0" }
		help	"U coordinate of the valid texture sector"
		disablewhen	"{ placement_type != 1 placement_type != 2 }"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "u" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"v"
		label	"V"
		type	float
		default	{ "0" }
		help	"V coordinate of the valid texture sector"
		disablewhen	"{ placement_type != 1 placement_type != 2 }"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "v" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"w"
		label	"W"
		type	float
		default	{ "1" }
		help	"Width of the valid texture sector"
		disablewhen	"{ placement_type != 1 placement_type != 2 }"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "w" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"h"
		label	"H"
		type	float
		default	{ "1" }
		help	"Height of the valid texture sector"
		disablewhen	"{ placement_type != 1 placement_type != 2 }"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "h" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"jitter"
		label	"Jitter"
		type	float
		default	{ "0" }
		help	"Amount of random placement variation"
		disablewhen	"{ placement_type != 2 }"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "jitter" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"tile_u"
		label	"Tile u"
		type	toggle
		default	{ "0" }
		help	"If true there is horizontal tiling"
		disablewhen	"{ placement_type != 2 }"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "tile_u" }
		parmtag	{ "vray_type" "boolean" }
	    }
	    parm {
		name	"tile_v"
		label	"Tile v"
		type	toggle
		default	{ "0" }
		help	"If true there is vertical tiling"
		disablewhen	"{ placement_type != 2 }"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "tile_v" }
		parmtag	{ "vray_type" "boolean" }
	    }
	    parm {
		name	"uv_noise_on"
		label	"UV noise on"
		type	toggle
		default	{ "0" }
		help	"If true the noise is enabled"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "uv_noise_on" }
		parmtag	{ "vray_type" "boolean" }
	    }
	    parm {
		name	"uv_noise_animate"
		label	"Animate UV noise"
		type	toggle
		default	{ "0" }
		help	"If true the noise is animated. Use \"UV noise phase\" to animate the noise"
		disablewhen	"{ uv_noise_on != 1 }"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "uv_noise_animate" }
		parmtag	{ "vray_type" "boolean" }
	    }
	    parm {
		name	"uv_noise_amount"
		label	"UV noise amount"
		type	float
		default	{ "1" }
		help	"UV noise amount"
		disablewhen	"{ uv_noise_on != 1 }"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "uv_noise_amount" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"uv_noise_levels"
		label	"UV noise levels"
		type	float
		default	{ "1" }
		help	"UV noise iterations"
		disablewhen	"{ uv_noise_on != 1 }"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "uv_noise_levels" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"uv_noise_size"
		label	"UV noise size"
		type	float
		default	{ "1" }
		help	"UV noise size"
		disablewhen	"{ uv_noise_on != 1 }"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "uv_noise_size" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"un_noise_phase"
		label	"UV noise phase"
		type	float
		default	{ "0" }
		help	"UV noise phase"
		disablewhen	"{ uv_noise_on != 1 } { uv_noise_animate != 1 }"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "un_noise_phase" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"color1"
		label	"Color1"
		type	color
		size	3
		default	{ "0" "0" "0" }
		help	"First color"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "color1" }
		parmtag	{ "vray_type" "Color" }
	    }
	    parm {
		name	"color2"
		label	"Color2"
		type	color
		size	3
		default	{ "1" "1" "1" }
		help	"Second color"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "color2" }
		parmtag	{ "vray_type" "Color" }
	    }
	    parm {
		name	"color1_tex"
		label	"Color1 tex"
		type	color4
		size	4
		default	{ "0" "0" "0" "0" }
		help	"Texture for the first color"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "color1_tex" }
		parmtag	{ "vray_type" "Texture" }
	    }
	    parm {
		name	"color2_tex"
		label	"Color2 tex"
		type	color4
		size	4
		default	{ "0" "0" "0" "0" }
		help	"Texture for the second color"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "color2_tex" }
		parmtag	{ "vray_type" "Texture" }
	    }
	    parm {
		name	"color1_tex_mult"
		label	"Color1 tex mult"
		type	float
		default	{ "1" }
		help	"Texture multiplier for the first color"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "color1_tex_mult" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"color2_tex_mult"
		label	"Color2 tex mult"
		type	float
		default	{ "1" }
		help	"Texture multiplier for the second color"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "color2_tex_mult" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"dimensions"
		label	"Dimensions"
		type	integer
		default	{ "3" }
		help	"Two or Three dimensional noise"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "dimensions" }
		parmtag	{ "vray_type" "int" }
	    }
	    parm {
		name	"amplitude"
		label	"Amplitude"
		type	float
		default	{ "1" }
		help	"Amplitude is a scaling factor applied to all the values in the texture, centered around the texture's average value.  This means that when you increase Amplitude, the light areas get lighter and the dark areas get darker. If the Noise is being used as a bump map, then increasing Amplitude will make the bumps higher and the valleys deeper. If you set Amplitude to a value greater than 1.0, then those parts of the texture that scale out of range will be clipped. On a bump map, this will show up as plateau regions"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "amplitude" }
		parmtag	{ "vray_type" "TextureFloat" }
	    }
	    parm {
		name	"ratio"
		label	"Ratio"
		type	float
		default	{ "0.707" }
		help	"Controls the frequency of the fractal noise.  Increase this value to increase the fineness of detail in the fractal"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "ratio" }
		parmtag	{ "vray_type" "TextureFloat" }
	    }
	    parm {
		name	"threshold"
		label	"Threshold"
		type	float
		default	{ "0" }
		help	"Threshold is a number that is added to the whole fractal, making it uniformly brighter.  If some parts of the fractal are pushed up out of range (greater than 1.0), then they will be clipped to 1.0.  If the Noise is being used as a bump map, this will show up as plateau regions. "
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "threshold" }
		parmtag	{ "vray_type" "TextureFloat" }
	    }
	    parm {
		name	"depth_max"
		label	"Depth max"
		type	integer
		default	{ "3" }
		help	"Controls how much calculation is done by the Noise texture"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "depth_max" }
		parmtag	{ "vray_type" "int" }
	    }
	    parm {
		name	"frequency"
		label	"Frequency"
		type	float
		default	{ "8" }
		help	"Determines the fundamental frequency for the noise. As this value increases the noise becomes more detailed. It has the inverse effect of the scale parameter"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "frequency" }
		parmtag	{ "vray_type" "TextureFloat" }
	    }
	    parm {
		name	"frequency_ratio"
		label	"Frequency ratio"
		type	float
		default	{ "2" }
		help	"Determines the relative spacial scale of the noise frequencies. If this ratio is not a whole integer then the fractal will not repeat  at the integer uv boundaries"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "frequency_ratio" }
		parmtag	{ "vray_type" "TextureFloat" }
	    }
	    parm {
		name	"inflection"
		label	"Inflection"
		type	toggle
		default	{ "0" }
		help	"If true applies a kink in the noise function. This is useful for creating puffy or bumpy effects. It is equivalent to abs(noise) * 2 - 1"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "inflection" }
		parmtag	{ "vray_type" "boolean" }
	    }
	    parm {
		name	"time"
		label	"Time"
		type	float
		default	{ "0" }
		help	"Animate the Noise texture. Control the rate and amount of change of the texture"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "time" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"noise_type"
		label	"Noise type"
		type	ordinal
		default	{ "2" }
		help	" 0 - Perlin Noise; 1 - Billow; 2 - Wave; 3 - Wispy. Determines which noise to use during the fractal iteration"
		menu	{
		    "0"	"Perlin Noise"
		    "1"	"Billow"
		    "2"	"Wave"
		    "3"	"Wispy"
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "noise_type" }
		parmtag	{ "vray_type" "int" }
	    }
	    parm {
		name	"density"
		label	"Density"
		type	float
		default	{ "1" }
		help	"Controls how many cells there are imbedded in the medium used by the Billow noise type. At 1.0, the medium is completely packed with cells. Reduce this value to make the cells more sparse. If the texture is being used as a bump map, then low values for Density will make it look like a smooth surface with occasional bumps on it"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "density" }
		parmtag	{ "vray_type" "TextureFloat" }
	    }
	    parm {
		name	"spottyness"
		label	"Spottyness"
		type	float
		default	{ "0.1" }
		help	"Controls the randomization of the density	of the individual cells used by the Billow noise type. When Spottyness is close to 0, all the cells will be the same density.  As you increase Spottyness, some cells will be denser or thinner than others, in a random fashion"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "spottyness" }
		parmtag	{ "vray_type" "TextureFloat" }
	    }
	    parm {
		name	"size_rand"
		label	"Size rand"
		type	float
		default	{ "0" }
		help	"Controls the randomization of the size of the individual blobs used by the Billow noise type. When it is close to 0, all the cells will be the same size.  As you increase size_rand, some cells will be smaller than others,	in a random fashion"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "size_rand" }
		parmtag	{ "vray_type" "TextureFloat" }
	    }
	    parm {
		name	"randomness"
		label	"Randomness"
		type	float
		default	{ "1" }
		help	"Controls how the cells for the Billow noise type are arranged relative to one another. Set randomness to 1.0 to get a realistic random distribution of cells, as would be found in nature. If you set Randomness to 0, all the spots are laid out in a completely regular pattern.  This can provide interesting effects when used as a bump map;  you can make things like insect eyes, or machine-tooled raspy surfaces"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "randomness" }
		parmtag	{ "vray_type" "TextureFloat" }
	    }
	    parm {
		name	"falloff"
		label	"Falloff"
		type	ordinal
		default	{ "2" }
		help	"0 - Linear; 1 - Smooth; 2 - Fast; 3 - Bubble Controls the way intensity falls off for individual blobs for the Billow noise type. Linear is a uniform falloff from the center to a value of zero at the edges of the blobs. Smooth is more natural looking, using a gaussian falloff. Fast focuses the intensity more towards the center of the blobs. Bubble uses a reverse falloff, fading to zero at the blob center"
		menu	{
		    "0"	"Linear"
		    "1"	"Smooth"
		    "2"	"Fast"
		    "3"	"Bubble"
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "falloff" }
		parmtag	{ "vray_type" "int" }
	    }
	    parm {
		name	"num_waves"
		label	"Num waves"
		type	integer
		default	{ "5" }
		help	"Determines how many waves to generate for the Wave noise type. The larger this number the more random looking and slower the texture"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "num_waves" }
		parmtag	{ "vray_type" "int" }
	    }
	    parm {
		name	"implode"
		label	"Implode"
		type	float
		default	{ "0" }
		help	"Implode warps the noise function in a concentric fashion about a point defined by the implode_center. At a value of zero there is no effect, while at a value of 1.0 it is a spherical projection of the noise function, creating a starburst effect. Negative values can be used to skew the noise outward instead of inward"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "implode" }
		parmtag	{ "vray_type" "TextureFloat" }
	    }
	    parm {
		name	"implode_center"
		label	"Implode center"
		type	color4
		size	4
		default	{ "0.5" "0.5" "0.5" "1" }
		help	"Implode center in UVW coordinates"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "implode_center" }
		parmtag	{ "vray_type" "Texture" }
	    }
	    parm {
		name	"scale"
		label	"Scale"
		type	color4
		size	4
		default	{ "1" "1" "1" "1" }
		help	"Scale for the noise UVW coordinates"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "scale" }
		parmtag	{ "vray_type" "Texture" }
	    }
	    parm {
		name	"origin"
		label	"Origin"
		type	color4
		size	4
		default	{ "0" "0" "0" "1" }
		help	"Translation for the noise UVW coordinates"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "TexNoiseMaya" }
		parmtag	{ "vray_pluginattr" "origin" }
		parmtag	{ "vray_type" "Texture" }
	    }
	}

    }

}
