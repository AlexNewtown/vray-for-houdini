#include "$VRAY_UI_DS_PATH/vfh_macros.ds"

parm {
    VFH_NAME("material")
    label "Material"
    type int
    parmtag { "cook_dependent" "1" }
    parmtag { "vray_pluginattr" "base_material" }
    parmtag { "vray_type" "PluginMaterial" }
    invisible
}

parm {
    VFH_NAME("use")
    label   "Enable"
    type    toggle
    default { "1" }
    help    "Use Wrapper material"
    range   { 0 1 }
    export  none
    parmtag { "cook_dependent" "1" }
    parmtag { "vray_custom_handling" "1" }
}

groupsimple {
    VFH_NAME("folder_main")

    label "Main"

    VFH_HIDETAB_WHEN_PARAM_FALSE("use")

    parm {
        VFH_NAME("generate_gi")
        label   "Generated GI Mult."
        type    float
        default { "1" }
        help    "Controls the GI generated by the material"
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "generate_gi" }
        parmtag { "vray_type" "float" }
    }

    parm {
        VFH_NAME("receive_gi")
        label   "Received GI Mult."
        type    float
        default { "1" }
        help    "Controls the GI received by the material"
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "receive_gi" }
        parmtag { "vray_type" "float" }
    }

    parm {
        VFH_NAME("generate_caustics")
        label   "Generated Caustics Mult."
        type    float
        default { "1" }
        help    "Controls the caustics generated by the material"
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "generate_caustics" }
        parmtag { "vray_type" "float" }
    }

    parm {
        VFH_NAME("receive_caustics")
        label   "Received Caustics Mult."
        type    float
        default { "1" }
        help    "Controls the caustics received by the material"
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "receive_caustics" }
        parmtag { "vray_type" "float" }
    }

    parm {
        VFH_NAME("gi_quality_multiplier")
        label   "Subdivs Mult."
        type    float
        default { "1" }
        help    "A multiplier for GI quality"
        range   { 0 2 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "gi_quality_multiplier" }
        parmtag { "vray_type" "float" }
    }

    parm {
        VFH_NAME("use_irrad_map")
        label   "Use Irradiance Map"
        type    toggle
        default { "1" }
        help    "Allow enable/disable of irradiance map per surface"
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "use_irrad_map" }
        parmtag { "vray_type" "boolean" }
    }
}

groupsimple {
    VFH_NAME("folder_matte_properties")

    label "Matte Properties"

    VFH_HIDETAB_WHEN_PARAM_FALSE("use")

    parm {
        VFH_NAME("alpha_contribution")
        label   "Alpha Contribution"
        type    float
        default { "1" }
        help    "The contribution of the resulting color to the alpha channel"
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "alpha_contribution" }
        parmtag { "vray_type" "float" }
    }

    parm {
        VFH_NAME("generate_render_elements")
        label   "Generate Render Elements"
        type    toggle
        default { "1" }
        help    "Setting this to false makes objects to not affect the render elements"
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "generate_render_elements" }
        parmtag { "vray_type" "boolean" }
    }

    parm {
        VFH_NAME("matte_surface")
        label   "Matte Surface"
        type    toggle
        default { "0" }
        help    "Makes the material appear as a matte material, which shows the background, instead of the base material, when viewed directly"
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "matte_surface" }
        parmtag { "vray_type" "boolean" }
    }

    parm {
        VFH_NAME("shadows")
        label   "Shadows"
        type    toggle
        default { "0" }
        help    "Turn this on to make shadow visible on the matter surface"
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "shadows" }
        parmtag { "vray_type" "boolean" }
        VFH_DISABLE_WHEN_PARAM_FALSE("matte_surface")
    }

    parm {
        VFH_NAME("affect_alpha")
        label   "Affect Alpha"
        type    toggle
        default { "0" }
        help    "Turn this on to make shadows affect the alpha contribution of the matte surface"
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "affect_alpha" }
        parmtag { "vray_type" "boolean" }
        VFH_DISABLE_WHEN_PARAM_FALSE("matte_surface")
    }
    parm {
        VFH_NAME("shadow_tint_color")
        label   "Shadow Tint"
        type    color
        size    3
        default { "0" "0" "0" }
        help    "Tint for the shadows on the matte surface"
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "shadow_tint_color" }
        parmtag { "vray_type" "color" }
        VFH_DISABLE_WHEN_PARAM_FALSE("matte_surface")
    }
    parm {
        VFH_NAME("shadow_brightness")
        label   "Shadow Brightness"
        type    float
        default { "1" }
        help    "An optional brightness parameter for the shadows on the matte surface.A value of 0.0 will make the shadows completely invisible, while a value of 1.0 will show the full shadows"
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "shadow_brightness" }
        parmtag { "vray_type" "float" }
        VFH_DISABLE_WHEN_PARAM_FALSE("matte_surface")
    }
    parm {
        VFH_NAME("reflection_amount")
        label   "Reflection Amount"
        type    float
        default { "1" }
        help    "Shows the reflections of the base material"
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "reflection_amount" }
        parmtag { "vray_type" "float" }
        VFH_DISABLE_WHEN_PARAM_FALSE("matte_surface")
    }
    parm {
        VFH_NAME("refraction_amount")
        label   "Refraction Amount"
        type    float
        default { "1" }
        help    "Shows the refractions of the base material"
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "refraction_amount" }
        parmtag { "vray_type" "float" }
        VFH_DISABLE_WHEN_PARAM_FALSE("matte_surface")
    }
    parm {
        VFH_NAME("gi_amount")
        label   "GI Amount"
        type    float
        default { "1" }
        help    "Determines the amount of gi shadows"
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "gi_amount" }
        parmtag { "vray_type" "float" }
        VFH_DISABLE_WHEN_PARAM_FALSE("matte_surface")
    }
    parm {
        VFH_NAME("no_gi_on_other_mattes")
        label   "No GI On Other Mattes"
        type    toggle
        default { "1" }
        help    "This will cause the material to appear as a matte object in reflections, refractions, GI etc for other matte objects"
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "no_gi_on_other_mattes" }
        parmtag { "vray_type" "boolean" }
        VFH_DISABLE_WHEN_PARAM_FALSE("matte_surface")
    }
    parm {
        VFH_NAME("matte_for_secondary_rays")
        label   "Matte For Secondary Rays"
        type    string
        default { "0" }
        help    "Set this to 1 to make the material act as matte for all secondary rays (reflections and refractions); if set to 2, the material will perform automatic projection mapping of theenvironment map on the matte geometry"
        menu    {
            "0" "Disable"
            "1" "Without Projection Mapping"
            "2" "With Projection Mapping"
        }
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "matte_for_secondary_rays" }
        parmtag { "vray_type" "enum" }
        VFH_DISABLE_WHEN_PARAM_FALSE("matte_surface")
    }
}

groupsimple {
    VFH_NAME("folder_options")

    label "Misc"

    VFH_HIDETAB_WHEN_PARAM_FALSE("use")

    parm {
        VFH_NAME("maya_background_shader_compatibility")
        label   "Maya Background Shader Compatibility"
        type    toggle
        default { "0" }
        help    "Setting this to true will make the matte alpha opaque so that the alpha of objects behind the matte won't be seen"
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "maya_background_shader_compatibility" }
        parmtag { "vray_type" "boolean" }
        invisible
    }
    parm {
        VFH_NAME("gi_surface_id")
        label   "GI Surface ID"
        type    int
        default { "0" }
        help    "If two objects have different GI surface IDs, the light cache samples of the two objects will not be blended"
        range   { 0 5 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "gi_surface_id" }
        parmtag { "vray_type" "int" }
    }
    parm {
        VFH_NAME("trace_depth")
        label   "Trace Depth"
        type    int
        default { "-1" }
        help    "The maximum reflection depth (-1 is controlled by the global options)"
        range   { 0 10 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "trace_depth" }
        parmtag { "vray_type" "int" }
    }
    parm {
        VFH_NAME("reflection_list_is_inclusive")
        label   "Reflection List Is Inclusive"
        type    toggle
        default { "0" }
        help    "Setting this to true will turn the reflection exclude list into inclusive (inverted)"
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "reflection_list_is_inclusive" }
        parmtag { "vray_type" "boolean" }
        invisible
    }
    parm {
        VFH_NAME("refraction_list_is_inclusive")
        label   "Refraction List Is Inclusive"
        type    toggle
        default { "0" }
        help    "Setting this to true will turn the refraction exclude list into inclusive (inverted)"
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "refraction_list_is_inclusive" }
        parmtag { "vray_type" "boolean" }
        invisible
    }
    parm {
        VFH_NAME("alpha_contribution_tex")
        label   "Alpha Contribution Tex"
        type    float
        default { "1" }
        help    "Same as alpha_contribution but used for the Maya's useBackground shader which supports textures as alpha contribution"
        range   { 0 64 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "alpha_contribution_tex" }
        parmtag { "vray_type" "TextureFloat" }
        invisible
    }
    parm {
        VFH_NAME("shadow_brightness_tex")
        label   "Shadow Brightness Tex"
        type    float
        default { "1" }
        help    "Same as shadow_brightness but used for the Maya's useBackground shader which supports textures as shadow brightness"
        range   { 0 64 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "shadow_brightness_tex" }
        parmtag { "vray_type" "TextureFloat" }
        invisible
    }
    parm {
        VFH_NAME("reflection_filter_tex")
        label   "Reflection Filter Tex"
        type    color4
        size    4
        default { "1" "1" "1" "1" }
        range   { 0 10 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "MtlWrapper" }
        parmtag { "vray_pluginattr" "reflection_filter_tex" }
        parmtag { "vray_type" "Texture" }
        invisible
    }
}
