{
    name	parameters
    parm {
	name	"plugindata"
	label	"XSI Color 2 Vector"
	type	data
	invisible
	default	{ "0" }
	help	"texXSIColor2Vector"
	range	{ 0 1 }
	export	none
	parmtag	{ "vray_plugin" "texXSIColor2Vector" }
	parmtag	{ "vray_type" "TEXTURE" }
    }
    group {
	name	"folder"
	label	"Common"

	parm {
	    name	"compatibility_with"
	    label	"Compatibility With"
	    type	ordinal
	    default	{ "0" }
	    help	"This is used to differentiate between textures exported from different applications"
	    menu	{
		"0"	"Max"
		"1"	"Maya"
	    }
	    range	{ 0 1 }
	    export	none
	    parmtag	{ "vray_plugin" "texXSIColor2Vector" }
	    parmtag	{ "vray_pluginattr" "compatibility_with" }
	    parmtag	{ "vray_type" "int" }
	}
	parm {
	    name	"alpha_from_intensity"
	    label	"Alpha From Intensity"
	    type	ordinal
	    default	{ "0" }
	    help	"If 2 - the alpha is forced to 1.0f; 1 - the resulting alpha is the color intensity (if compatibility_with is 0) or the color luminance (if compatibility_with is 1); 0 - the alpha is taken from the bitmap alpha"
	    menu	{
		"0"	"Bitmap alpha"
		"1"	"Color intensity/luminance"
		"2"	"Force opaque"
	    }
	    range	{ 0 1 }
	    export	none
	    parmtag	{ "vray_plugin" "texXSIColor2Vector" }
	    parmtag	{ "vray_pluginattr" "alpha_from_intensity" }
	    parmtag	{ "vray_type" "int" }
	}
	parm {
	    name	"invert"
	    label	"Invert"
	    type	toggle
	    default	{ "0" }
	    help	"If true, the resulting texture color will be inverted"
	    range	{ 0 1 }
	    export	none
	    parmtag	{ "vray_plugin" "texXSIColor2Vector" }
	    parmtag	{ "vray_pluginattr" "invert" }
	    parmtag	{ "vray_type" "boolean" }
	}
	parm {
	    name	"invert_alpha"
	    label	"Invert Alpha"
	    type	toggle
	    default	{ "1" }
	    help	"If true and invert is on, the resulting texture alpha will be inverted too. If false, just the color will be inverted"
	    disablewhen	"{ invert != 1 }"
	    range	{ 0 1 }
	    export	none
	    parmtag	{ "vray_plugin" "texXSIColor2Vector" }
	    parmtag	{ "vray_pluginattr" "invert_alpha" }
	    parmtag	{ "vray_type" "boolean" }
	}
	parm {
	    name	"color_mult"
	    label	"Color Mult"
	    type	color4
	    size	4
	    default	{ "1" "1" "1" "1" }
	    help	"A multiplier for the texture color"
	    range	{ 0 10 }
	    export	none
	    parmtag	{ "vray_plugin" "texXSIColor2Vector" }
	    parmtag	{ "vray_pluginattr" "color_mult" }
	    parmtag	{ "vray_type" "Texture" }
	}
	parm {
	    name	"color_offset"
	    label	"Color Offset"
	    type	color4
	    size	4
	    default	{ "0" "0" "0" "0" }
	    help	"An additional offset for the texture color"
	    range	{ 0 10 }
	    export	none
	    parmtag	{ "vray_plugin" "texXSIColor2Vector" }
	    parmtag	{ "vray_pluginattr" "color_offset" }
	    parmtag	{ "vray_type" "Texture" }
	}
	parm {
	    name	"alpha_mult"
	    label	"Alpha Mult"
	    type	float
	    default	{ "1" }
	    help	"A multiplier for the texture alpha"
	    range	{ 0 10 }
	    export	none
	    parmtag	{ "vray_plugin" "texXSIColor2Vector" }
	    parmtag	{ "vray_pluginattr" "alpha_mult" }
	    parmtag	{ "vray_type" "TextureFloat" }
	}
	parm {
	    name	"alpha_offset"
	    label	"Alpha Offset"
	    type	float
	    default	{ "0" }
	    help	"An additional offset for the texture alpha"
	    range	{ 0 10 }
	    export	none
	    parmtag	{ "vray_plugin" "texXSIColor2Vector" }
	    parmtag	{ "vray_pluginattr" "alpha_offset" }
	    parmtag	{ "vray_type" "TextureFloat" }
	}
	parm {
	    name	"nouvw_color"
	    label	"No Uvs Color"
	    type	color4
	    size	4
	    default	{ "0.5" "0.5" "0.5" "1" }
	    help	"The color when there are no valid uvw coordinates"
	    range	{ 0 10 }
	    export	none
	    parmtag	{ "vray_plugin" "texXSIColor2Vector" }
	    parmtag	{ "vray_pluginattr" "nouvw_color" }
	    parmtag	{ "vray_type" "Texture" }
	}
	parm {
	    name	"clr_txt"
	    label	"Clr Txt"
	    type	color4
	    size	4
	    default	{ "0" "0" "0" "0" }
	    help	"Scalar2Vector will be calculated on the base of a color texture"
	    range	{ 0 10 }
	    export	none
	    parmtag	{ "vray_plugin" "texXSIColor2Vector" }
	    parmtag	{ "vray_pluginattr" "clr_txt" }
	    parmtag	{ "vray_type" "Texture" }
	}
	parm {
	    name	"output_scale"
	    label	"Output Scale"
	    type	float
	    default	{ "0" }
	    help	"The intensity to output"
	    range	{ 0 10 }
	    export	none
	    parmtag	{ "vray_plugin" "texXSIColor2Vector" }
	    parmtag	{ "vray_pluginattr" "output_scale" }
	    parmtag	{ "vray_type" "TextureFloat" }
	}
	parm {
	    name	"method"
	    label	"Method"
	    type	integer
	    default	{ "0" }
	    help	"method: direct copy(0), normal map(1)"
	    range	{ 0 10 }
	    export	none
	    parmtag	{ "vray_plugin" "texXSIColor2Vector" }
	    parmtag	{ "vray_pluginattr" "method" }
	    parmtag	{ "vray_type" "int" }
	}
    }

}
