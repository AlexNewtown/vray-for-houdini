{
    name	parameters
    parm {
	name	"plugindata"
	label	"Bercon Grad"
	type	data
	invisible
	default	{ "0" }
	help	"TexBerconGrad"
	range	{ 0 1 }
	export	none
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_type" "TEXTURE" }
    }
    parm {
	name	"compatibility_with"
	label	"Compatibility With"
	type	ordinal
	default	{ "0" }
	help	"This is used to differentiate between textures exported from different applications"
	menu	{
	    "Max"	"Max"
	    "Maya"	"Maya"
	}
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_enumkeys" "0,1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "compatibility_with" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"alpha_from_intensity"
	label	"Alpha From Intensity"
	type	ordinal
	default	{ "0" }
	help	"If 2 - the alpha is forced to 1.0f; 1 - the resulting alpha is the color intensity (if compatibility_with is 0) or the color luminance (if compatibility_with is 1); 0 - the alpha is taken from the bitmap alpha"
	menu	{
	    "Bitmap alpha"	"Bitmap alpha"
	    "Color intensity/luminance"	"Color intensity/luminance"
	    "Force opaque"	"Force opaque"
	}
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_enumkeys" "0,1,2" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "alpha_from_intensity" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"invert"
	label	"Invert"
	type	toggle
	default	{ "0" }
	help	"If true, the resulting texture color will be inverted"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "invert" }
	parmtag	{ "vray_type" "boolean" }
    }
    parm {
	name	"invert_alpha"
	label	"Invert Alpha"
	type	toggle
	default	{ "1" }
	help	"If true and invert is on, the resulting texture alpha will be inverted too. If false, just the color will be inverted"
	disablewhen	"{ invert != 1 }"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "invert_alpha" }
	parmtag	{ "vray_type" "boolean" }
    }
    parm {
	name	"color_mult"
	label	"Color Mult"
	type	color4
	size	4
	default	{ "1" "1" "1" "1" }
	help	"A multiplier for the texture color"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "color_mult" }
	parmtag	{ "vray_type" "Texture" }
    }
    parm {
	name	"color_offset"
	label	"Color Offset"
	type	color4
	size	4
	default	{ "0" "0" "0" "0" }
	help	"An additional offset for the texture color"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "color_offset" }
	parmtag	{ "vray_type" "Texture" }
    }
    parm {
	name	"alpha_mult"
	label	"Alpha Mult"
	type	float
	default	{ "1" }
	help	"A multiplier for the texture alpha"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "alpha_mult" }
	parmtag	{ "vray_type" "TextureFloat" }
    }
    parm {
	name	"alpha_offset"
	label	"Alpha Offset"
	type	float
	default	{ "0" }
	help	"An additional offset for the texture alpha"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "alpha_offset" }
	parmtag	{ "vray_type" "TextureFloat" }
    }
    parm {
	name	"nouvw_color"
	label	"No Uvs Color"
	type	color4
	size	4
	default	{ "0.5" "0.5" "0.5" "1" }
	help	"The color when there are no valid uvw coordinates"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "nouvw_color" }
	parmtag	{ "vray_type" "Texture" }
    }
    parm {
	name	"placement_type"
	label	"Placement Type"
	type	ordinal
	default	{ "0" }
	help	"The way the valid portion of the texture is applied: 0 - the whole texture is valid, 1 - crop, 2 -place"
	menu	{
	    "Whole texture is valid"	"Whole texture is valid"
	    "Crop"	"Crop"
	    "Place"	"Place"
	}
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_enumkeys" "0,1,2" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "placement_type" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"u"
	label	"U"
	type	float
	default	{ "0" }
	help	"U coordinate of the valid texture sector"
	disablewhen	"{ placement_type != Crop placement_type != Place }"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "u" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"v"
	label	"V"
	type	float
	default	{ "0" }
	help	"V coordinate of the valid texture sector"
	disablewhen	"{ placement_type != Crop placement_type != Place }"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "v" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"w"
	label	"W"
	type	float
	default	{ "1" }
	help	"Width of the valid texture sector"
	disablewhen	"{ placement_type != Crop placement_type != Place }"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "w" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"h"
	label	"H"
	type	float
	default	{ "1" }
	help	"Height of the valid texture sector"
	disablewhen	"{ placement_type != Crop placement_type != Place }"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "h" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"jitter"
	label	"Jitter"
	type	float
	default	{ "0" }
	help	"Amount of random placement variation"
	disablewhen	"{ placement_type != Place }"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "jitter" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"tile_u"
	label	"Tile U"
	type	toggle
	default	{ "0" }
	help	"If true there is horizontal tiling"
	disablewhen	"{ placement_type != Place }"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "tile_u" }
	parmtag	{ "vray_type" "boolean" }
    }
    parm {
	name	"tile_v"
	label	"Tile V"
	type	toggle
	default	{ "0" }
	help	"If true there is vertical tiling"
	disablewhen	"{ placement_type != Place }"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "tile_v" }
	parmtag	{ "vray_type" "boolean" }
    }
    parm {
	name	"uv_noise_on"
	label	"Uv Noise On"
	type	toggle
	default	{ "0" }
	help	"If true the noise is enabled"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "uv_noise_on" }
	parmtag	{ "vray_type" "boolean" }
    }
    parm {
	name	"uv_noise_animate"
	label	"Animate Uv Noise"
	type	toggle
	default	{ "0" }
	help	"If true the noise is animated. Use \"UV noise phase\" to animate the noise"
	disablewhen	"{ uv_noise_on != 1 }"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "uv_noise_animate" }
	parmtag	{ "vray_type" "boolean" }
    }
    parm {
	name	"uv_noise_amount"
	label	"Uv Noise Amount"
	type	float
	default	{ "1" }
	help	"UV noise amount"
	disablewhen	"{ uv_noise_on != 1 }"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "uv_noise_amount" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"uv_noise_levels"
	label	"Uv Noise Levels"
	type	float
	default	{ "1" }
	help	"UV noise iterations"
	disablewhen	"{ uv_noise_on != 1 }"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "uv_noise_levels" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"uv_noise_size"
	label	"Uv Noise Size"
	type	float
	default	{ "1" }
	help	"UV noise size"
	disablewhen	"{ uv_noise_on != 1 }"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "uv_noise_size" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"un_noise_phase"
	label	"Uv Noise Phase"
	type	float
	default	{ "0" }
	help	"UV noise phase"
	disablewhen	"{ uv_noise_on != 1 } { uv_noise_animate != 1 }"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "un_noise_phase" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"positions"
	label	"Positions"
	type	float
	default	{ "0.5" }
	help	"positions of the given colors"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "positions" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"texture_map"
	label	"Texture Map"
	type	color4
	size	4
	default	{ "0" "0" "0" "0" }
	help	"the texture used for mapped gradient ramp"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "texture_map" }
	parmtag	{ "vray_type" "Texture" }
    }
    parm {
	name	"gradient_type"
	label	"Gradient Type"
	type	ordinal
	default	{ "0" }
	help	"0:1D linear, 1:2D radial, 2:2D rectangle, 3:2D diagonal, 4:2D Pong, 5:2D Spiral, 6:2D Sweep, 7:2D tartan, 8:3D Spherical, 9:3D Box"
	menu	{
	    "1D linear"	"1D linear"
	    "2D radial"	"2D radial"
	    "2D rectangle"	"2D rectangle"
	    "2D diagonal"	"2D diagonal"
	    "2D Pong"	"2D Pong"
	    "2D Spiral"	"2D Spiral"
	    "2D Sweep"	"2D Sweep"
	    "2D tartan"	"2D tartan"
	    "3D Spherical"	"3D Spherical"
	    "3D Box"	"3D Box"
	}
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_enumkeys" "0,1,2,3,4,5,6,7,8,9" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "gradient_type" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"interpolation"
	label	"Interpolation"
	type	ordinal
	default	{ "0" }
	help	"0:linear, 1:smooth, 2:solid nearest, 3:solid left, 4:solid right"
	menu	{
	    "linear"	"linear"
	    "smooth"	"smooth"
	    "solid nearest"	"solid nearest"
	    "solid left"	"solid left"
	    "solid right"	"solid right"
	}
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_enumkeys" "0,1,2,3,4" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "interpolation" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"noise_amount"
	label	"Noise Amount"
	type	float
	default	{ "0" }
	help	"Distortion noise amount"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "noise_amount" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"noise_type"
	label	"Noise Type"
	type	ordinal
	default	{ "0" }
	help	"0:regular, 1:fractal, 2:turbulence"
	menu	{
	    "Regular"	"Regular"
	    "Fractal"	"Fractal"
	    "Turbulence"	"Turbulence"
	}
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_enumkeys" "0,1,2" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "noise_type" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"noise_size"
	label	"Noise Size"
	type	float
	default	{ "1" }
	help	"default = 1.0"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "noise_size" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"noise_phase"
	label	"Noise Phase"
	type	float
	default	{ "0" }
	help	"default = 0.0"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "noise_phase" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"noise_levels"
	label	"Noise Levels"
	type	float
	default	{ "4" }
	help	"default = 4.0"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "noise_levels" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"noise_treshold_low"
	label	"Noise Treshold Low"
	type	float
	default	{ "0" }
	help	"default = 0.0f"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "noise_treshold_low" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"noise_treshold_high"
	label	"Noise Treshold High"
	type	float
	default	{ "1" }
	help	"default = 1.0f"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "noise_treshold_high" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"noise_smooth"
	label	"Noise Smooth"
	type	float
	default	{ "0" }
	help	"default = 0.0f"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "noise_smooth" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"type"
	label	"Type"
	type	ordinal
	default	{ "0" }
	help	"0:UVW, 1:Normal, 2:Distance, 3:Light, 4:Map, 5:Random, 6:Particle age, 7:Particle speed, 8:Particle size"
	menu	{
	    "UVW"	"UVW"
	    "Normal"	"Normal"
	    "Distance"	"Distance"
	    "Light"	"Light"
	    "Map"	"Map"
	    "Random"	"Random"
	    "Particle age"	"Particle age"
	    "Particle speed"	"Particle speed"
	    "Particle size"	"Particle size"
	}
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_enumkeys" "0,1,2,3,4,5,6,7,8" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "type" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"normal_type"
	label	"Normal Type"
	type	ordinal
	default	{ "0" }
	help	"0:View, 1:Local X, 2:Local Y, 3:Local Z, 4:World X, 5:World Y, 6:World Z, 7:Camera X, 8:Camera Y, 9:Camera Z, 10:To Object, 11:Object Z"
	menu	{
	    "View"	"View"
	    "Local X"	"Local X"
	    "Local Y"	"Local Y"
	    "Local Z"	"Local Z"
	    "World X"	"World X"
	    "World Y"	"World Y"
	    "World Z"	"World Z"
	    "Camera X"	"Camera X"
	    "Camera Y"	"Camera Y"
	    "Camera Z"	"Camera Z"
	    "To Object"	"To Object"
	    "Object Z"	"Object Z"
	}
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_enumkeys" "0,1,2,3,4,5,6,7,8,9,10,11" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "normal_type" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"normal_function"
	label	"Normal Function"
	type	ordinal
	default	{ "0" }
	help	"0:Perpendicular, 1:Towards, 2:Fresnel"
	menu	{
	    "Perpendicular"	"Perpendicular"
	    "Towards"	"Towards"
	    "Fresnel"	"Fresnel"
	}
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_enumkeys" "0,1,2" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "normal_function" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"use_curve_input"
	label	"Use Curve Input"
	type	toggle
	default	{ "0" }
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "use_curve_input" }
	parmtag	{ "vray_type" "boolean" }
    }
    parm {
	name	"curve_input"
	label	"Curve Input"
	type	float
	default	{ "0.5" }
	help	"If curve is used the gradient value will be taken from this texture"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexBerconGrad" }
	parmtag	{ "vray_pluginattr" "curve_input" }
	parmtag	{ "vray_type" "TextureFloat" }
    }
}
