{
    name	Node
    label	"Node"
    parm {
	name	"plugindata"
	label	"Node"
	type	data
	invisible
	default	{ "0" }
	range	{ 0 1 }
	export	none
	parmtag	{ "vray_plugin" "Node" }
	parmtag	{ "vray_type" "NODE" }
    }
    parm {
	name	"nsamples"
	label	"Nsamples"
	type	integer
	default	{ "0" }
	help	"Number of transform samples"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "Node" }
	parmtag	{ "vray_pluginattr" "nsamples" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"lights"
	label	"Lights"
	type	oplist
	default	{ "" }
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "oprelative" "." }
	parmtag	{ "vray_plugin" "Node" }
	parmtag	{ "vray_pluginattr" "lights" }
	parmtag	{ "vray_type" "List<Object>" }
    }
    parm {
	name	"visible"
	label	"Visible"
	type	toggle
	default	{ "1" }
	help	"true if the object is renderable (visible) and false otherwise; it only makes sense to use this parameter if it is animated, or if another object depends on this node but it must not be rendered"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "Node" }
	parmtag	{ "vray_pluginattr" "visible" }
	parmtag	{ "vray_type" "boolean" }
    }
    parm {
	name	"user_attributes"
	label	"User Attributes"
	type	string
	default	{ "" }
	help	"A list of user defined attributes"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "Node" }
	parmtag	{ "vray_pluginattr" "user_attributes" }
	parmtag	{ "vray_type" "String" }
    }
    parm {
	name	"objectID"
	label	"Objectid"
	type	integer
	default	{ "0" }
	help	"Object ID for the rendering"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "Node" }
	parmtag	{ "vray_pluginattr" "objectID" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"primary_visibility"
	label	"Primary Visibility"
	type	toggle
	default	{ "1" }
	help	"If off shading an intersection with this mesh will not generate a gbuffer."
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "Node" }
	parmtag	{ "vray_pluginattr" "primary_visibility" }
	parmtag	{ "vray_type" "boolean" }
    }
    parm {
	name	"time_for_geometry"
	label	"Time For Geometry"
	type	float
	default	{ "0" }
	help	"If this is used (controlled by 'use_time_for_geometry') it will be given as the time for which the instance should be created and the geometry should be compiled for geometry that supports the StaticGeomSourceForTimeInterface interface. Note that this time will not be used for the transform of the node - the current frame time will be used for that"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "Node" }
	parmtag	{ "vray_pluginattr" "time_for_geometry" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"use_time_for_geometry"
	label	"Use Time For Geometry"
	type	toggle
	default	{ "0" }
	help	"If true the 'time_for_geometry' parameter will be used"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "Node" }
	parmtag	{ "vray_pluginattr" "use_time_for_geometry" }
	parmtag	{ "vray_type" "boolean" }
    }
}
