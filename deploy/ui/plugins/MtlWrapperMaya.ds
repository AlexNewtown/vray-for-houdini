{
    name	parameters
    group {
	name	"MtlWrapperMaya"
	label	"Mtl Wrapper Maya"

	parm {
	    name	"plugindata"
	    label	"Mtl Wrapper Maya"
	    type	data
	    invisible
	    default	{ "0" }
	    help	"MtlWrapperMaya"
	    range	{ 0 1 }
	    export	none
	    parmtag	{ "vray_plugin" "MtlWrapperMaya" }
	    parmtag	{ "vray_type" "MATERIAL" }
	}
	parm {
	    name	"base_material"
	    label	"Base material"
	    type	oppath
	    default	{ "" }
	    help	"The base material"
	    range	{ 0 1 }
	    export	none
	    parmtag	{ "oprelative" "." }
	    parmtag	{ "vray_plugin" "MtlWrapperMaya" }
	    parmtag	{ "vray_pluginattr" "base_material" }
	    parmtag	{ "vray_type" "Object" }
	}
	group {
	    name	"folder"
	    label	"Additional surface properties"

	    parm {
		name	"use_irrad_map"
		label	"Use irradiance map"
		type	toggle
		default	{ "1" }
		help	"Allow enable/disable of irradiance map per surface"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "use_irrad_map" }
		parmtag	{ "vray_type" "boolean" }
	    }
	    parm {
		name	"generate_gi"
		label	"Generated GI mult."
		type	float
		default	{ "1" }
		help	"Controls the GI generated by the material"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "generate_gi" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"receive_gi"
		label	"Received GI mult."
		type	float
		default	{ "1" }
		help	"Controls the GI received by the material"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "receive_gi" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"generate_caustics"
		label	"Generated caustics mult."
		type	float
		default	{ "1" }
		help	"Controls the caustics generated by the material"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "generate_caustics" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"receive_caustics"
		label	"Received caustics mult."
		type	float
		default	{ "1" }
		help	"Controls the caustics received by the material"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "receive_caustics" }
		parmtag	{ "vray_type" "float" }
	    }
	}

	group {
	    name	"folder2"
	    label	"Matte properties"

	    parm {
		name	"alpha_contribution"
		label	"Alpha contribution"
		type	float
		default	{ "1" }
		help	"The contribution of the resulting color to the alpha channel"
		range	{ 1 1 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "alpha_contribution" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"matte_surface"
		label	"Matte surface"
		type	toggle
		default	{ "0" }
		help	"Makes the material appear as a matte material, which shows the background, instead of the base material, when viewed directly"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "matte_surface" }
		parmtag	{ "vray_type" "boolean" }
	    }
	    parm {
		name	"shadows"
		label	"Shadows"
		type	toggle
		default	{ "0" }
		help	"Turn this on to make shadows visible on the matte surface"
		disablewhen	"{ matte_surface != 1 }"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "shadows" }
		parmtag	{ "vray_type" "boolean" }
	    }
	    parm {
		name	"affect_alpha"
		label	"Affect alpha"
		type	toggle
		default	{ "0" }
		help	"Turn this on to make shadows affect the alpha contribution of the matte surface"
		disablewhen	"{ matte_surface != 1 }"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "affect_alpha" }
		parmtag	{ "vray_type" "boolean" }
	    }
	    parm {
		name	"shadow_tint_color"
		label	"Shadow tint color"
		type	color
		size	3
		default	{ "0" "0" "0" }
		help	"Tint for the shadows on the matte surface"
		disablewhen	"{ matte_surface != 1 }"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "shadow_tint_color" }
		parmtag	{ "vray_type" "Color" }
	    }
	    parm {
		name	"shadow_brightness"
		label	"Shadow brightness"
		type	float
		default	{ "1" }
		help	"An optional brightness parameter for the shadows on the matte surface.A value of 0.0 will make the shadows completely invisible, while a value of 1.0 will show the full shadows"
		disablewhen	"{ matte_surface != 1 }"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "shadow_brightness" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"reflection_amount"
		label	"Reflection amount"
		type	float
		default	{ "1" }
		help	"Shows the reflections of the base material"
		disablewhen	"{ matte_surface != 1 }"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "reflection_amount" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"refraction_amount"
		label	"Refraction amount"
		type	float
		default	{ "1" }
		help	"Shows the refractions of the base material"
		disablewhen	"{ matte_surface != 1 }"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "refraction_amount" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"gi_amount"
		label	"GI amount"
		type	float
		default	{ "1" }
		help	"Determines the amount of gi shadows"
		disablewhen	"{ matte_surface != 1 }"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "gi_amount" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"no_gi_on_other_mattes"
		label	"No GI on other mattes"
		type	toggle
		default	{ "1" }
		help	"This will cause the material to appear as a matte object in reflections, refractions, GI etc for other matte objects"
		disablewhen	"{ matte_surface != 1 }"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "no_gi_on_other_mattes" }
		parmtag	{ "vray_type" "boolean" }
	    }
	    parm {
		name	"matte_for_secondary_rays"
		label	"Matte for sec. rays"
		type	ordinal
		default	{ "0" }
		help	"Set this to 1 to make the material act as matte for all secondary rays (reflections and refractions); if set to 2, the material will perform automatic projection mapping of the environment map on the matte geometry"
		disablewhen	"{ matte_surface != 1 }"
		menu	{
		    "0"	"Disable"
		    "1"	"Without Projection Mapping"
		    "2"	"With Projection Mapping"
		}
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "matte_for_secondary_rays" }
		parmtag	{ "vray_type" "int" }
	    }
	}

	group {
	    name	"folder3"
	    label	"Miscellaneous"

	    parm {
		name	"gi_surface_id"
		label	"GI surface ID"
		type	integer
		default	{ "0" }
		help	"If two objects have different GI surface ids, the light cache samples of the two objects will not be blended"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "gi_surface_id" }
		parmtag	{ "vray_type" "int" }
	    }
	    parm {
		name	"gi_quality_multiplier"
		label	"Subdivs multiplier"
		type	float
		default	{ "1" }
		help	"A multiplier for GI quality"
		range	{ 0.01 10 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "gi_quality_multiplier" }
		parmtag	{ "vray_type" "float" }
	    }
	    parm {
		name	"maya_background_shader_compatibility"
		label	"Maya background shader compatibility"
		type	toggle
		default	{ "0" }
		help	"Setting this to true will make the matte alpha opaque so that the alpha of objects behind the matte won't be seen"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "maya_background_shader_compatibility" }
		parmtag	{ "vray_type" "boolean" }
	    }
	    parm {
		name	"alpha_contribution_tex"
		label	"Alpha contribution tex"
		type	float
		default	{ "1" }
		help	"Same as alpha_contribution but used for the Maya's useBackground shader which supports textures as alpha contribution"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "alpha_contribution_tex" }
		parmtag	{ "vray_type" "TextureFloat" }
	    }
	    parm {
		name	"shadow_brightness_tex"
		label	"Shadow brightness tex"
		type	float
		default	{ "1" }
		help	"Same as shadow_brightness but used for the Maya's useBackground shader which supports textures as shadow brightness"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "shadow_brightness_tex" }
		parmtag	{ "vray_type" "TextureFloat" }
	    }
	    parm {
		name	"reflection_filter_tex"
		label	"Reflection filter tex"
		type	color4
		size	4
		default	{ "1" "1" "1" "1" }
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "reflection_filter_tex" }
		parmtag	{ "vray_type" "Texture" }
	    }
	    parm {
		name	"trace_depth"
		label	"Trace depth"
		type	integer
		default	{ "-1" }
		help	"The maximum reflection depth (-1 is controlled by the global options)"
		range	{ 0 10 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "trace_depth" }
		parmtag	{ "vray_type" "int" }
	    }
	    parm {
		name	"channels"
		label	"Channels"
		type	oplist
		default	{ "" }
		help	"Render channels the result of this BRDF will be written to"
		range	{ 0 1 }
		export	none
		parmtag	{ "oprelative" "." }
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "channels" }
		parmtag	{ "vray_type" "List<Object>" }
	    }
	    parm {
		name	"generate_render_elements"
		label	"Generate render elements"
		type	toggle
		default	{ "1" }
		help	"Setting this to false makes objects to not affect the render elements"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "generate_render_elements" }
		parmtag	{ "vray_type" "boolean" }
	    }
	    parm {
		name	"reflection_exclude"
		label	"Reflection exclude"
		type	oplist
		default	{ "" }
		help	"A list of plugins that will be excluded from reflections"
		range	{ 0 1 }
		export	none
		parmtag	{ "oprelative" "." }
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "reflection_exclude" }
		parmtag	{ "vray_type" "List<Object>" }
	    }
	    parm {
		name	"reflection_list_is_inclusive"
		label	"Reflection list is inclusive"
		type	toggle
		default	{ "0" }
		help	"Setting this to true will turn the reflection exclude list into inclusive (inverted)"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "reflection_list_is_inclusive" }
		parmtag	{ "vray_type" "boolean" }
	    }
	    parm {
		name	"refraction_exclude"
		label	"Refraction exclude"
		type	oplist
		default	{ "" }
		help	"A list of plugins that will be excluded from refractions"
		range	{ 0 1 }
		export	none
		parmtag	{ "oprelative" "." }
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "refraction_exclude" }
		parmtag	{ "vray_type" "List<Object>" }
	    }
	    parm {
		name	"refraction_list_is_inclusive"
		label	"Refraction list is inclusive"
		type	toggle
		default	{ "0" }
		help	"Setting this to true will turn the refraction exclude list into inclusive (inverted)"
		range	{ 0 1 }
		export	none
		parmtag	{ "vray_plugin" "MtlWrapperMaya" }
		parmtag	{ "vray_pluginattr" "refraction_list_is_inclusive" }
		parmtag	{ "vray_type" "boolean" }
	    }
	}

    }

}
