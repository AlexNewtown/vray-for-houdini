{
    name  BRDFVRayMtl
    label "VRayMtl"
    parmtag { spare_category "VRayMtl" }
    parmtag { vray_plugin "BRDFVRayMtl" }

#include "vfh_brdf_common.ds"

    group {
        name "folder_diffuse"
        label "Diffuse"
        parm {
            name  "diffuse"
            label "Color"
            type  color4
            size  4
            default { "0.5" "0.5" "0.5" "1" }
            help  "The diffuse color of the material"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "diffuse" }
            parmtag { "vray_type" "Texture" }
            parmtag { "ogl_diff" "1" }
        }
        parm {
            name  "roughness"
            label "Roughness"
            type  float
            default { "0" }
            help  "The roughness of the diffuse part of the material"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "roughness" }
            parmtag { "vray_type" "TextureFloat" }
            parmtag { "ogl_diff_rough" "1" }
        }
        parm {
            name  "roughness_model"
            label "Roughness Model"
            help  "The roughness model"
            type  string
            menu  {
                "0" "Gamma Based"
                "1" "Oren-Nayar"
            }
            default { "0" }
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "brdf_type" }
            parmtag { "vray_type" "enum" }
        }
        parm {
            name  "opacity"
            label "Opacity"
            type  float
            default { "1" }
            help  "The opacity of the material"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "opacity" }
            parmtag { "vray_type" "TextureFloat" }
        }
        parm {
            name  "self_illumination"
            label "Self - Illumination Color"
            type  color4
            size  4
            default { "0" "0" "0" "1" }
            help  "The self-illumination color of the material"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "self_illumination" }
            parmtag { "vray_type" "Texture" }
        }
        parm {
            name  "self_illumination_gi"
            label "Self - Illumination Affects Gi"
            type  toggle
            default { "1" }
            help  "true if the self-illumination should affect GI"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "self_illumination_gi" }
            parmtag { "vray_type" "boolean" }
        }
    }
    group {
        name "folder_reflection"
        label "Reflection"
        parm {
            name  "brdf_type"
            label "BRDF Type"
            type  ordinal
            help  "The BRDF type"
            menu  {
                "0" "Phong"
                "1" "Blinn"
                "2" "Ward"
                "4" "Microfacet GTR (GGX)"
            }
            default { "4" }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "brdf_type" }
            parmtag { "vray_type" "enum" }
        }
        parm {
            name  "gtr_gamma"
            label "GTR  Tail Falloff"
            type  float
            default { "2" }
            help  "How much to increase/decrease the tail of the glossy highlight when using GGX reflection model"
            disablewhen "{ brdf_type != 4 }"
            hidewhen  "{ brdf_type != 4 }"
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "gtr_gamma" }
            parmtag { "vray_type" "TextureFloat" }
        }
        parm {
            name  "reflect"
            label "Color"
            type  color4
            size  4
            default { "0" "0" "0" "1" }
            help  "The reflection color of the material"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "reflect" }
            parmtag { "vray_type" "Texture" }
        }
        parm {
            name  "reflect_glossiness"
            label "Glossiness"
            type  float
            default { "1" }
            help  "The glossiness of the reflections"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "reflect_glossiness" }
            parmtag { "vray_type" "TextureFloat" }
        }
        parm {
            name  "hilight_glossiness_lock"
            label "Lock Highlight Glossines to Reflection Glossiness"
            type  toggle
            default { "1" }
            help  "true to use the reflection glossiness also for hilights (hilight_glossiness is ignored)"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "hilight_glossiness_lock" }
            parmtag { "vray_type" "boolean" }
        }
        parm {
            name  "hilight_glossiness"
            label "Highlight Glossiness"
            type  float
            default { "1" }
            help  "The glossiness of the hilights"
            hidewhen "{ hilight_glossiness_lock != 0 }"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "hilight_glossiness" }
            parmtag { "vray_type" "TextureFloat" }
        }
        parm {
            name  "fresnel"
            label "Use Fresnel"
            type  toggle
            default { "1" }
            help  "true to enable fresnel reflections"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "fresnel" }
            parmtag { "vray_type" "boolean" }
        }
        parm {
            name  "option_glossy_fresnel"
            label "Glossy Fresnel"
            type  toggle
            default { "1" }
            help  "Enable glossy fresnel"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "option_glossy_fresnel" }
            parmtag { "vray_type" "boolean" }
            disablewhen "{ fresnel != 1 }"
        }
        parm {
            name  "fresnel_ior_lock"
            label "Lock Fresnel IOR to Refraction IOR"
            type  toggle
            default { "1" }
            help  "true to use the refraction ior also for the Fresnel term (fresnel_ior is ignored)"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "fresnel_ior_lock" }
            parmtag { "vray_type" "boolean" }
            disablewhen "{ fresnel != 1 }"
        }
        parm {
            name  "fresnel_ior"
            label "Fresnel IOR"
            type  float
            default { "1.6" }
            help  "The ior for calculating the Fresnel term"
            disablewhen "{ fresnel != 1 } { fresnel_ior_lock != 0 }"
            range { 0 5 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "fresnel_ior" }
            parmtag { "vray_type" "TextureFloat" }
            hidewhen "{ fresnel_ior_lock == 1 }"
        }
        parm {
            name  "reflect_subdivs"
            label "Subdivs"
            type  integer
            default { "8" }
            help  "Subdivs for glossy reflectons"
            range { 0 24 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "reflect_subdivs" }
            parmtag { "vray_type" "int" }
        }
        groupcollapsible {
            name "folder_refl_anisotropy"
            label "Anisotropy"
            parm {
                name  "anisotropy"
                label "Anisotropy(-1..1)"
                type  float
                default { "0" }
                help  "The anisotropy for glossy reflections, from -1 to 1 (0.0 is isotropic reflections)"
                range { -1 1 }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "anisotropy" }
                parmtag { "vray_type" "TextureFloat" }
            }
            parm {
                name  "anisotropy_rotation"
                label "Rotation"
                type  float
                default { "0" }
                help  "The rotation of the anisotropy axes, from 0.0 to 1.0"
                range { 0 1 }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "anisotropy_rotation" }
                parmtag { "vray_type" "TextureFloat" }
            }
            parm {
                name  "anisotropy_derivation"
                label "Uv Vectors Derivation"
                type  ordinal
                default { "0" }
                help  "What method to use for deriving anisotropy axes"
                menu  {
                    "0" "Local Axis"
                    "1" "UVW Generator"
                }
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "anisotropy_derivation" }
                parmtag { "vray_type" "enum" }
            }
            parm {
                name  "anisotropy_axis"
                label "Axis"
                type  ordinal
                default { "2" }
                help  "Which local object axis to use when anisotropy_derivation is 0"
                disablewhen "{ anisotropy_derivation != 0 }"
                menu  {
                    "0" "X"
                    "1" "Y"
                    "2" "Z"
                }
                range { 0 1 }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "anisotropy_axis" }
                parmtag { "vray_type" "enum" }
            }
        }
        groupcollapsible {
            name "folder_refl_advanced"
            label "Advanced"
            parm {
                name  "reflect_trace"
                label "Trace Reflections"
                type  toggle
                default { "1" }
                help  "true to trace reflections and false to only do hilights"
                range { 0 1 }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "reflect_trace" }
                parmtag { "vray_type" "boolean" }
            }
            parm {
                name  "reflect_exit_color"
                label "Exit Color"
                type  color
                size  3
                default { "0" "0" "0" }
                help  "The color to use when the maximum depth is reached"
                range { 0 1 }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "reflect_exit_color" }
                parmtag { "vray_type" "color" }
            }
            parm {
                name  "reflect_depth"
                label "Max Depth"
                type  integer
                default { "5" }
                help  "The maximum depth for reflections"
                range { 0 10 }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "reflect_depth" }
                parmtag { "vray_type" "int" }
            }
            parm {
                name  "reflect_dim_distance_on"
                label "Enable Dim Distance"
                type  toggle
                default { "0" }
                help  "True to enable dim distance"
                range { 0 1 }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "reflect_dim_distance_on" }
                parmtag { "vray_type" "boolean" }
            }
            parm {
                name  "reflect_dim_distance"
                label "Dim Distance"
                type  float
                default { "1e+18" }
                help  "How much to dim reflection as length of rays increases"
                disablewhen "{ reflect_dim_distance_on != 1 }"
                range { 0 1e+18 }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "reflect_dim_distance" }
                parmtag { "vray_type" "float" }
            }
            parm {
                name  "reflect_dim_distance_falloff"
                label "Dim Fall-off"
                type  float
                default { "0" }
                help  "Fall off for the dim distance"
                disablewhen "{ reflect_dim_distance_on != 1 }"
                range { 0 1 }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "reflect_dim_distance_falloff" }
                parmtag { "vray_type" "float" }
            }
            parm {
                name  "hilight_soften"
                label "Soften"
                type  float
                default { "0" }
                help  "How much to soften hilights and reflections at grazing light angles"
                range { 0 1 }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "hilight_soften" }
                parmtag { "vray_type" "float" }
            }
            parm {
                name  "reflect_affect_alpha"
                label "Affect Channels"
                type  ordinal
                default { "0" }
                help  "Determines how reflections affect the alpha channel"
                menu  {
                    "0" "Color Only"
                    "1" "Color+Alpha"
                    "2" "All Channels"
                }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "reflect_affect_alpha" }
                parmtag { "vray_type" "enum" }
            }
        }
    }
    group {
        name "folder_refraction"
        label "Refraction"
        parm {
            name  "refract"
            label "Color"
            type  color4
            size  4
            default { "0" "0" "0" "1" }
            help  "The refraction color of the material"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "refract" }
            parmtag { "vray_type" "Texture" }
        }
        parm {
            name  "refract_glossiness"
            label "Glossiness"
            type  float
            default { "1" }
            help  "Glossiness for refractions"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "refract_glossiness" }
            parmtag { "vray_type" "TextureFloat" }
        }
        parm {
            name  "refract_ior"
            label "Index of Refraction"
            type  float
            default { "1.6" }
            help  "The IOR for refractions"
            range { 0 5 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "refract_ior" }
            parmtag { "vray_type" "TextureFloat" }
        }
        parm {
            name  "refract_subdivs"
            label "Subdivs"
            type  integer
            default { "8" }
            help  "Subdivs for glossy refractions"
            range { 0 16 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "refract_subdivs" }
            parmtag { "vray_type" "int" }
        }
        parm {
            name  "fog_color"
            label "Fog Color"
            help  "The absorption (fog) color"
            type  color
            size  3
            default { "1" "1" "1" }
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "fog_color" }
            parmtag { "vray_type" "color" }
        }
        parm {
            name  "fog_color_tex"
            label "Fog Color Texture"
            help  "The absorption (fog) color texture"
            type  color4
            size  4
            default { "1" "1" "1" "1" }
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "fog_color_tex" }
            parmtag { "vray_linked_only" "1" }
            parmtag { "vray_type" "Texture" }
            invisible
        }
        parm {
            name  "fog_mult"
            label "Fog Multiplier"
            type  float
            default { "0" }
            help  "Multiplier for the absorption"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "fog_mult" }
            parmtag { "vray_type" "float" }
        }
        parm {
            name  "fog_bias"
            label "Fog Bias"
            type  float
            default { "0" }
            help  "Bias for the absorption"
            range { -1 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "fog_bias" }
            parmtag { "vray_type" "float" }
        }
        parm {
            name  "fog_unit_scale_on"
            label "Fog Multiplier In Centimeters^-1"
            type  toggle
            default { "1" }
            help  "Enable unit scale multiplication, when calculating absorption"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "fog_unit_scale_on" }
            parmtag { "vray_type" "boolean" }
        }
        parm {
            name  "dispersion_on"
            label "Dispersion"
            type  toggle
            default { "0" }
            help  "true to enable dispersion"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "dispersion_on" }
            parmtag { "vray_type" "boolean" }
        }
        parm {
            name  "dispersion"
            label "Abberation"
            type  float
            hidewhen "{ dispersion_on == 0 }"
            default { "50" }
            help  "abbe value"
            disablewhen "{ dispersion_on != 1 }"
            range { 0 50 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "dispersion" }
            parmtag { "vray_type" "float" }
         }
        parm {
            name  "refract_affect_shadows"
            label "Affect Shadows"
            type  toggle
            default { "1" }
            help  "true to enable the refraction to affect the shadows cast by the material (as transparent shadows)"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "refract_affect_shadows" }
            parmtag { "vray_type" "boolean" }
        }
        groupcollapsible {
            name "folder_refr_sss"
            label "Subsurface scattering"
            parm {
                name  "translucency"
                label "Translucency Type"
                type  ordinal
                default { "0" }
                help  "Translucency mode"
                menu  {
                  "0"  "None"
                  "1"  "Hard (wax) model"
                  "2"  "Soft (water) model"
                  "3"  "Hybrid model"
                }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "translucency" }
                parmtag { "vray_type" "enum" }
            }
            parm {
                name  "translucency_color"
                label "Translucency Color"
                type  color4
                size  4
                default { "1" "1" "1" "1" }
                help  "Filter color for the translucency effect"
                disablewhen "{ translucency == 0 }"
                range { 0 1 }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "translucency_color" }
                parmtag { "vray_type" "Texture" }
            }
            parm {
                name  "translucency_scatter_dir"
                label "Fwd/back coeff"
                type  float
                default { "1" }
                help  "Scatter direction (0.0f is backward, 1.0f is forward)"
                disablewhen "{ translucency == 0 }"
                range { 0 1 }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "translucency_scatter_dir" }
                parmtag { "vray_type" "float" }
            }
            parm {
                name  "translucency_light_mult"
                label "Light Multiplier"
                type  float
                default { "1" }
                help  "A multiplier for the calculated lighting for the translucency effect"
                disablewhen "{ translucency == 0 }"
                range { 0 8 }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "translucency_light_mult" }
                parmtag { "vray_type" "float" }
            }
            parm {
                name  "translucency_scatter_coeff"
                label "Scatter Coeff"
                type  float
                default { "0" }
                help  "Scattering cone (0.0f - no scattering, 1.0f - full scattering"
                disablewhen "{ translucency == 0 }"
                range { 0 1 }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "translucency_scatter_coeff" }
                parmtag { "vray_type" "float" }
            }
            parm {
                name  "translucency_thickness"
                label "Maximum Thickness"
                type  float
                default { "1000" }
                help  "Maximum distance to trace inside the object"
                disablewhen "{ translucency == 0 }"
                range { 0 1000 }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "translucency_thickness" }
                parmtag { "vray_type" "float" }
            }
        }
        groupcollapsible {
            name "folder_refr_advanced"
            label "Advanced"
            parm {
                name  "refract_trace"
                label "Trace Refractions"
                type  toggle
                default { "1" }
                help  "1 to trace refractions; 0 to disable them"
                range { 0 1 }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "refract_trace" }
                parmtag { "vray_type" "boolean" }
            }
            parm {
                name  "refract_exit_color_on"
                label "Use Exit Color"
                type  toggle
                default { "0" }
                help  "If false, when the maximum refraction depth is reached, the material is assumed transparent, instead of terminating the ray"
                range { 0 1 }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "refract_exit_color_on" }
                parmtag { "vray_type" "boolean" }
             }
            parm {
                name  "refract_exit_color"
                label "Exit Color"
                type  color
                hidewhen "{ refract_exit_color_on == 0 }"
                size  3
                default { "0" "0" "0" }
                help  "The color to use when maximum depth is reached when refract_exit_color_on is true"
                disablewhen "{ refract_exit_color_on != 1 }"
                range { 0 1 }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "refract_exit_color" }
                parmtag { "vray_type" "color" }
            }
            parm {
                name  "refract_depth"
                label "Max Depth"
                type  integer
                default { "5" }
                help  "The maximum depth for refractions"
                range { 0 8 }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "refract_depth" }
                parmtag { "vray_type" "int" }
            }
            parm {
                name  "refract_affect_alpha"
                label "Affect Channels"
                type  ordinal
                default { "0" }
                help  "Determines how refractions affect the alpha channel"
                menu  {
                    "0"  "Color Only"
                    "1" "Color+Alpha"
                    "2"  "All Channels"
                }
                export  none
                parmtag { "cook_dependent" "1" }
                parmtag { "vray_plugin" "BRDFVRayMtl" }
                parmtag { "vray_pluginattr" "refract_affect_alpha" }
                parmtag { "vray_type" "enum" }
            }
        }
    }
    group {
        name "folder_options"
        label "Options"
        parm {
            name  "option_cutoff"
            label "Cutoff"
            type  float
            default { "0.001" }
            help  "Specifies a cutoff threshold for tracing reflections/refractions"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "option_cutoff" }
            parmtag { "vray_type" "float" }
        }
        parm {
            name  "option_reflect_on_back"
            label "Reflect On Back Side"
            type  toggle
            default { "0" }
            help  "true to compute reflections for back sides of objects"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "option_reflect_on_back" }
            parmtag { "vray_type" "boolean" }
        }
        parm {
            name  "option_double_sided"
            label "Double-sided"
            type  toggle
            default { "1" }
            help  "true if the material is double-sided"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "option_double_sided" }
            parmtag { "vray_type" "boolean" }
        }
        parm {
            name  "option_use_irradiance_map"
            label "Use Irradiance Map"
            type  toggle
            default { "1" }
            help  "false to perform local brute-force GI calculatons and true to use the current GI engine"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "option_use_irradiance_map" }
            parmtag { "vray_type" "boolean" }
        }
        parm {
            name  "option_fix_dark_edges"
            label "Fix Dark Edges"
            type  toggle
            default { "1" }
            help  "true to fix dark edges for glossy reflections with low samples; only set this to false for compatibility with older versions"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "option_fix_dark_edges" }
            parmtag { "vray_type" "boolean" }
        }
        parm {
            name  "option_energy_mode"
            label "Energy Preservation"
            type  ordinal
            default { "0" }
            help  "Energy preservation mode for reflections and refractions"
            menu  {
                "0" "Color"
                "1" "Monochrome"
            }
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "option_energy_mode" }
            parmtag { "vray_type" "enum" }
        }
        parm {
            name  "option_glossy_rays_as_gi"
            label "Glossy Rays As GI"
            type  ordinal
            default { "1" }
            help  "Specifies when to treat GI rays as glossy rays"
            menu  {
                "0" "Never"
                "1" "GI Rays"
                "2" "Always"
            }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "option_glossy_rays_as_gi" }
            parmtag { "vray_type" "enum" }
        }
        parm {
            name  "option_use_roughness"
            label "Refl. Gloss. Interpretation"
            help  "These options control how RGlossiness (reflection glossiness) is interpreted. When Use glossiness is selected, the RGlossiness value is used as is, and a high RGlossiness value (such as 1.0) will result in sharp reflection highlights. When Use roughness is selected, the RGlossiness inverse value is used. For example, if RGlossiness is set to 1.0 and Use roughness is selected, this will result in diffuse shading. Conversely, if RGlossiness is set to 0.0 and Use roughness is selected, this will result in sharp highlights. Note that the Roughness parameter itself has no bearing on the results of this option."
            type  string
            menu  {
                "0" "Use Glossiness"
                "1" "Use oughness"
            }
            default { "0" }
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "option_use_roughness" }
            parmtag { "vray_type" "enum" }
        }
        parm {
            name  "use_environment_override"
            label "Use Environment Override"
            type  toggle
            default { "1" }
            help  "True to use the 'environment override' texture"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "use_environment_override" }
            parmtag { "vray_type" "boolean" }
        }
        parm {
            name  "environment_override"
            label "Environment Override"
            type  color4
            size  4
            default { "1" "1" "1" "1" }
            help  "Environment override texture"
            disablewhen "{ use_environment_override != 1 }"
            range { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_linked_only" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "environment_override" }
            parmtag { "vray_type" "Texture" }
        }
        parm {
            name  "environment_priority"
            label "Environment Priority"
            type  integer
            default { "0" }
            help  "Environment override priority (used when several materials override it along a ray path)"
            disablewhen "{ use_environment_override != 1 }"
            range { 0 2 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "BRDFVRayMtl" }
            parmtag { "vray_pluginattr" "environment_priority" }
            parmtag { "vray_type" "int" }
        }
    }
}