{
    name	parameters
    parm {
	name	"plugindata"
	label	"XSI Gradient"
	type	data
	invisible
	default	{ "0" }
	help	"TexXSIGradient"
	range	{ 0 1 }
	export	none
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_type" "TEXTURE" }
    }
    parm {
	name	"compatibility_with"
	label	"Compatibility With"
	type	ordinal
	default	{ "0" }
	help	"This is used to differentiate between textures exported from different applications"
	menu	{
	    "Max"	"Max"
	    "Maya"	"Maya"
	}
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_enumkeys" "0,1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "compatibility_with" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"alpha_from_intensity"
	label	"Alpha From Intensity"
	type	ordinal
	default	{ "0" }
	help	"If 2 - the alpha is forced to 1.0f; 1 - the resulting alpha is the color intensity (if compatibility_with is 0) or the color luminance (if compatibility_with is 1); 0 - the alpha is taken from the bitmap alpha"
	menu	{
	    "Bitmap alpha"	"Bitmap alpha"
	    "Color intensity/luminance"	"Color intensity/luminance"
	    "Force opaque"	"Force opaque"
	}
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_enumkeys" "0,1,2" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "alpha_from_intensity" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"invert"
	label	"Invert"
	type	toggle
	default	{ "0" }
	help	"If true, the resulting texture color will be inverted"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "invert" }
	parmtag	{ "vray_type" "boolean" }
    }
    parm {
	name	"invert_alpha"
	label	"Invert Alpha"
	type	toggle
	default	{ "1" }
	help	"If true and invert is on, the resulting texture alpha will be inverted too. If false, just the color will be inverted"
	disablewhen	"{ invert != 1 }"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "invert_alpha" }
	parmtag	{ "vray_type" "boolean" }
    }
    parm {
	name	"color_mult"
	label	"Color Mult"
	type	color4
	size	4
	default	{ "1" "1" "1" "1" }
	help	"A multiplier for the texture color"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "color_mult" }
	parmtag	{ "vray_type" "Texture" }
    }
    parm {
	name	"color_offset"
	label	"Color Offset"
	type	color4
	size	4
	default	{ "0" "0" "0" "0" }
	help	"An additional offset for the texture color"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "color_offset" }
	parmtag	{ "vray_type" "Texture" }
    }
    parm {
	name	"alpha_mult"
	label	"Alpha Mult"
	type	float
	default	{ "1" }
	help	"A multiplier for the texture alpha"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "alpha_mult" }
	parmtag	{ "vray_type" "TextureFloat" }
    }
    parm {
	name	"alpha_offset"
	label	"Alpha Offset"
	type	float
	default	{ "0" }
	help	"An additional offset for the texture alpha"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "alpha_offset" }
	parmtag	{ "vray_type" "TextureFloat" }
    }
    parm {
	name	"nouvw_color"
	label	"No Uvs Color"
	type	color4
	size	4
	default	{ "0.5" "0.5" "0.5" "1" }
	help	"The color when there are no valid uvw coordinates"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "nouvw_color" }
	parmtag	{ "vray_type" "Texture" }
    }
    parm {
	name	"placement_type"
	label	"Placement Type"
	type	ordinal
	default	{ "0" }
	help	"The way the valid portion of the texture is applied: 0 - the whole texture is valid, 1 - crop, 2 -place"
	menu	{
	    "Whole texture is valid"	"Whole texture is valid"
	    "Crop"	"Crop"
	    "Place"	"Place"
	}
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_enumkeys" "0,1,2" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "placement_type" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"u"
	label	"U"
	type	float
	default	{ "0" }
	help	"U coordinate of the valid texture sector"
	disablewhen	"{ placement_type != Crop placement_type != Place }"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "u" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"v"
	label	"V"
	type	float
	default	{ "0" }
	help	"V coordinate of the valid texture sector"
	disablewhen	"{ placement_type != Crop placement_type != Place }"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "v" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"w"
	label	"W"
	type	float
	default	{ "1" }
	help	"Width of the valid texture sector"
	disablewhen	"{ placement_type != Crop placement_type != Place }"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "w" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"h"
	label	"H"
	type	float
	default	{ "1" }
	help	"Height of the valid texture sector"
	disablewhen	"{ placement_type != Crop placement_type != Place }"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "h" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"jitter"
	label	"Jitter"
	type	float
	default	{ "0" }
	help	"Amount of random placement variation"
	disablewhen	"{ placement_type != Place }"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "jitter" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"tile_u"
	label	"Tile U"
	type	toggle
	default	{ "0" }
	help	"If true there is horizontal tiling"
	disablewhen	"{ placement_type != Place }"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "tile_u" }
	parmtag	{ "vray_type" "boolean" }
    }
    parm {
	name	"tile_v"
	label	"Tile V"
	type	toggle
	default	{ "0" }
	help	"If true there is vertical tiling"
	disablewhen	"{ placement_type != Place }"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "tile_v" }
	parmtag	{ "vray_type" "boolean" }
    }
    parm {
	name	"uv_noise_on"
	label	"Uv Noise On"
	type	toggle
	default	{ "0" }
	help	"If true the noise is enabled"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "uv_noise_on" }
	parmtag	{ "vray_type" "boolean" }
    }
    parm {
	name	"uv_noise_animate"
	label	"Animate Uv Noise"
	type	toggle
	default	{ "0" }
	help	"If true the noise is animated. Use \"UV noise phase\" to animate the noise"
	disablewhen	"{ uv_noise_on != 1 }"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "uv_noise_animate" }
	parmtag	{ "vray_type" "boolean" }
    }
    parm {
	name	"uv_noise_amount"
	label	"Uv Noise Amount"
	type	float
	default	{ "1" }
	help	"UV noise amount"
	disablewhen	"{ uv_noise_on != 1 }"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "uv_noise_amount" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"uv_noise_levels"
	label	"Uv Noise Levels"
	type	float
	default	{ "1" }
	help	"UV noise iterations"
	disablewhen	"{ uv_noise_on != 1 }"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "uv_noise_levels" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"uv_noise_size"
	label	"Uv Noise Size"
	type	float
	default	{ "1" }
	help	"UV noise size"
	disablewhen	"{ uv_noise_on != 1 }"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "uv_noise_size" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"un_noise_phase"
	label	"Uv Noise Phase"
	type	float
	default	{ "0" }
	help	"UV noise phase"
	disablewhen	"{ uv_noise_on != 1 } { uv_noise_animate != 1 }"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "un_noise_phase" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"color1"
	label	"Color1"
	type	color4
	size	4
	default	{ "0" "0" "0" "0" }
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "color1" }
	parmtag	{ "vray_type" "Texture" }
    }
    parm {
	name	"color2"
	label	"Color2"
	type	color4
	size	4
	default	{ "0" "0" "0" "0" }
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "color2" }
	parmtag	{ "vray_type" "Texture" }
    }
    parm {
	name	"color3"
	label	"Color3"
	type	color4
	size	4
	default	{ "0" "0" "0" "0" }
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "color3" }
	parmtag	{ "vray_type" "Texture" }
    }
    parm {
	name	"color4"
	label	"Color4"
	type	color4
	size	4
	default	{ "0" "0" "0" "0" }
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "color4" }
	parmtag	{ "vray_type" "Texture" }
    }
    parm {
	name	"color5"
	label	"Color5"
	type	color4
	size	4
	default	{ "0" "0" "0" "0" }
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "color5" }
	parmtag	{ "vray_type" "Texture" }
    }
    parm {
	name	"color6"
	label	"Color6"
	type	color4
	size	4
	default	{ "0" "0" "0" "0" }
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "color6" }
	parmtag	{ "vray_type" "Texture" }
    }
    parm {
	name	"color7"
	label	"Color7"
	type	color4
	size	4
	default	{ "0" "0" "0" "0" }
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "color7" }
	parmtag	{ "vray_type" "Texture" }
    }
    parm {
	name	"color8"
	label	"Color8"
	type	color4
	size	4
	default	{ "0" "0" "0" "0" }
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "color8" }
	parmtag	{ "vray_type" "Texture" }
    }
    parm {
	name	"pos_color1"
	label	"Pos Color1"
	type	float
	default	{ "0" }
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "pos_color1" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"pos_color2"
	label	"Pos Color2"
	type	float
	default	{ "1" }
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "pos_color2" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"pos_color3"
	label	"Pos Color3"
	type	float
	default	{ "-1" }
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "pos_color3" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"pos_color4"
	label	"Pos Color4"
	type	float
	default	{ "-1" }
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "pos_color4" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"pos_color5"
	label	"Pos Color5"
	type	float
	default	{ "-1" }
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "pos_color5" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"pos_color6"
	label	"Pos Color6"
	type	float
	default	{ "-1" }
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "pos_color6" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"pos_color7"
	label	"Pos Color7"
	type	float
	default	{ "-1" }
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "pos_color7" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"pos_color8"
	label	"Pos Color8"
	type	float
	default	{ "-1" }
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "pos_color8" }
	parmtag	{ "vray_type" "float" }
    }
    parm {
	name	"gradient_type"
	label	"Gradient Type"
	type	ordinal
	default	{ "0" }
	help	"Gradient type: 0 (Vertical), 1(Horizontal), 2(Radial Wave), 3(RadialRainbow), 4(DiagonalDown), 5(DiagonalUp)"
	menu	{
	    "Vertical"	"Vertical"
	    "Horizontal"	"Horizontal"
	    "Radial Wave"	"Radial Wave"
	    "RadialRainbow"	"RadialRainbow"
	    "DiagonalDown"	"DiagonalDown"
	    "DiagonalUp"	"DiagonalUp"
	}
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_enumkeys" "0,1,2,3,4,5" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "gradient_type" }
	parmtag	{ "vray_type" "int" }
    }
    parm {
	name	"invert_direction"
	label	"Invert Direction"
	type	toggle
	default	{ "0" }
	help	"Inverts gradient directions if true"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "invert_direction" }
	parmtag	{ "vray_type" "boolean" }
    }
    parm {
	name	"clip"
	label	"Clip"
	type	toggle
	default	{ "0" }
	help	"If true, the gradient ends at the edge of the outermost color. Otherwise the outermost color bleeds over the untextured portion of the object"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "clip" }
	parmtag	{ "vray_type" "boolean" }
    }
    parm {
	name	"alpha_output"
	label	"Alpha Output"
	type	toggle
	default	{ "0" }
	help	"If true, copies the gradient's alpha channel into the RGB channels, creating a grayscale image"
	range	{ 0 1 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "alpha_output" }
	parmtag	{ "vray_type" "boolean" }
    }
    parm {
	name	"alpha_factor"
	label	"Alpha Factor"
	type	float
	default	{ "0" }
	help	"Determines the factor by which the Alpha is multiplied when it is copied into the RGB channels"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "alpha_factor" }
	parmtag	{ "vray_type" "TextureFloat" }
    }
    parm {
	name	"input"
	label	"Input"
	type	float
	default	{ "-1" }
	help	"Especially for XSI Gradient Mixer, when input type is scalar"
	range	{ 0 10 }
	export	none
	parmtag	{ "cook_dependent" "1" }
	parmtag	{ "vray_plugin" "TexXSIGradient" }
	parmtag	{ "vray_pluginattr" "input" }
	parmtag	{ "vray_type" "float" }
    }
}
