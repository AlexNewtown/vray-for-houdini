#ifdef PREFIX
#define NAMEM(n) \
    name PREFIX##n##""
#else
#define NAMEM(n) \
    name n##""
#endif

parm {
    NAMEM("nsamples")
    label   "Samples"
    type    integer
    default { "0" }
    help    "Number of uvw transform samples"
    range   { 0 64 }
    export  none
    parmtag { "cook_dependent" "1" }
    parmtag { "vray_plugin" "UVWGenPlanarWorld" }
    parmtag { "vray_pluginattr" "nsamples" }
    parmtag { "vray_type" "int" }
    invisible
}

parm {
    NAMEM("wrap_u")
    label   "Wrap U"
    type    ordinal
    menu {
        0 "No Wrapping"
        1 "Wrap"
        2 "Mirror Tile"
    }
    default { "0" }
    help    "0 - no wrapping, 1 - wrap, 2 - mirror tile"
    range   { 0 64 }
    export  none
    parmtag { "cook_dependent" "1" }
    parmtag { "vray_plugin" "UVWGenPlanarWorld" }
    parmtag { "vray_pluginattr" "wrap_u" }
    parmtag { "vray_type" "int" }
}

parm {
    NAMEM("wrap_v")
    label   "Wrap V"
    type    ordinal
    menu {
        0 "No Wrapping"
        1 "Wrap"
        2 "Mirror Tile"
    }
    default { "0" }
    help    "0 - no wrapping, 1 - wrap, 2 - mirror tile"
    range   { 0 64 }
    export  none
    parmtag { "cook_dependent" "1" }
    parmtag { "vray_plugin" "UVWGenPlanarWorld" }
    parmtag { "vray_pluginattr" "wrap_v" }
    parmtag { "vray_type" "int" }
}

parm {
    NAMEM("wrap_w")
    label   "Wrap W"
    type    ordinal
    menu {
        0 "No Wrapping"
        1 "Wrap"
        2 "Mirror Tile"
    }
    default { "0" }
    help    "0 - no wrapping, 1 - wrap, 2 - mirror tile"
    range   { 0 64 }
    export  none
    parmtag { "cook_dependent" "1" }
    parmtag { "vray_plugin" "UVWGenPlanarWorld" }
    parmtag { "vray_pluginattr" "wrap_w" }
    parmtag { "vray_type" "int" }
}

parm {
    NAMEM("crop_u")
    label   "Crop U"
    type    toggle
    default { "0" }
    help    "Enable to crop in the u-direction"
    range   { 0 64 }
    export  none
    parmtag { "cook_dependent" "1" }
    parmtag { "vray_plugin" "UVWGenPlanarWorld" }
    parmtag { "vray_pluginattr" "crop_u" }
    parmtag { "vray_type" "int" }
}

parm {
    NAMEM("crop_v")
    label   "Crop V"
    type    toggle
    default { "0" }
    help    "Enable to crop in the v-direction"
    range   { 0 64 }
    export  none
    parmtag { "cook_dependent" "1" }
    parmtag { "vray_plugin" "UVWGenPlanarWorld" }
    parmtag { "vray_pluginattr" "crop_v" }
    parmtag { "vray_type" "int" }
}

parm {
    NAMEM("crop_w")
    label   "Crop W"
    type    toggle
    default { "0" }
    help    "Enable to crop in the w-direction"
    range   { 0 64 }
    export  none
    parmtag { "cook_dependent" "1" }
    parmtag { "vray_plugin" "UVWGenPlanarWorld" }
    parmtag { "vray_pluginattr" "crop_w" }
    parmtag { "vray_type" "int" }
}

parm {
    NAMEM("coverage")
    label   "Coverage"
    type    direction
    size    3
    default { "1" "1" "1" }
    help    "Coverage"
    range   { 0 1 }
    export  none
    parmtag { "cook_dependent" "1" }
    parmtag { "vray_plugin" "UVWGenPlanarWorld" }
    parmtag { "vray_pluginattr" "coverage" }
    parmtag { "vray_type" "vector" }
}

parm {
    NAMEM("wrap_mode")
    label   "Wrap Mode"
    type    integer
    default { "0" }
    help    "Wrap mode"
    menu    {
        "0" "On 0.5 Boundary"
        "1" "On Integer Boundary"
    }
    parmtag { "cook_dependent" "1" }
    parmtag { "vray_plugin" "UVWGenPlanarWorld" }
    parmtag { "vray_pluginattr" "wrap_mode" }
    parmtag { "vray_type" "enum" }
}

parm {
    NAMEM("duvw_scale")
    label   "UV Derivatives Scale"
    type    float
    default { "1" }
    help    "Additional scale factor for the texture derivatives"
    range   { 0 64 }
    export  none
    parmtag { "cook_dependent" "1" }
    parmtag { "vray_plugin" "UVWGenPlanarWorld" }
    parmtag { "vray_pluginattr" "duvw_scale" }
    parmtag { "vray_type" "float" }
}

#undef NAMEM
#undef PREFIX
