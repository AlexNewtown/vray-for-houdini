{
    name    RenderChannelDenoiser
    label   "Denoiser"
    parmtag { spare_category "Denoiser" }
    parmtag { vray_plugin "RenderChannelDenoiser" }

     parm {
        name    "enabled"
        label   "Enabled"
        type    toggle
        default { "1" }
        range   { 0 1 }
        export  none
        parmtag { "cook_dependent" "1" }
        parmtag { "vray_plugin" "RenderChannelDenoiser" }
        parmtag { "vray_pluginattr" "enabled" }
        parmtag { "vray_type" "int" }
    }
    groupsimple {
        name "folder_main"
        label "Controls"
        hidewhentab "{ enabled == 0 }"
        parm {
            name    "use_gpu"
            label   "Use GPU"
            type    toggle
            default { "0" }
            help    "Enable usage of GPU version if OpenCL support is found"
            range   { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "RenderChannelDenoiser" }
            parmtag { "vray_pluginattr" "use_gpu" }
            parmtag { "vray_type" "int" }
        }
        parm {
            name    "name"
            label   "Name"
            type    string
            default { "denoiser" }
            range   { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "RenderChannelDenoiser" }
            parmtag { "vray_pluginattr" "name" }
            parmtag { "vray_type" "string" }
        }
        parm {
            name    "preset"
            label   "Preset"
            type    string
            default { "1" }
            help    "Specifies one a few predefined presets for the radius and the strength"
            menu    {
                "0"  "Mild"
                "1"   "Default"
                "2"    "Strong"
                "3"    "Custom"
            }
            range   { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_enumkeys" "0,1,2,3" }
            parmtag { "vray_plugin" "RenderChannelDenoiser" }
            parmtag { "vray_pluginattr" "preset" }
            parmtag { "vray_type" "enum" }
        }
        parm {
            name    "mode"
            label   "Mode"
            type    string
            default { "2" }
            help    "Specifies what to do with the result"
            menu    {
                "0"  "None"
                "1"   "Replace RGB"
                "2"  "Separate Channel"
            }
            range   { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_enumkeys" "0,1,2" }
            parmtag { "vray_plugin" "RenderChannelDenoiser" }
            parmtag { "vray_pluginattr" "mode" }
            parmtag { "vray_type" "enum" }
        }
        parm {
            name    "type"
            label   "Type"
            type    string
            default { "0" }
            help    "Denoise type"
            menu    {
                "0"  "RGB Only"
                "1"  "All Channels"
            }
            range   { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_enumkeys" "0,1" }
            parmtag { "vray_plugin" "RenderChannelDenoiser" }
            parmtag { "vray_pluginattr" "type" }
            parmtag { "vray_type" "enum" }
        }
        parm {
            name    "radius"
            label   "Radius"
            type    float
            default { "10" }
            help    "Specifies pixel radius for denoising"
            range   { 0 10 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "RenderChannelDenoiser" }
            parmtag { "vray_pluginattr" "radius" }
            parmtag { "vray_type" "float" }
            hidewhen    "{ preset != 3 }"
        }
        parm {
            name    "strength"
            label   "Strength"
            type    float
            default { "1" }
            help    "Denoiser strength, a multiplier for the noise level render element from V-Ray"
            range   { 0 10 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "RenderChannelDenoiser" }
            parmtag { "vray_pluginattr" "strength" }
            parmtag { "vray_type" "float" }
            hidewhen    "{ preset != 3 }"
        }
        parm {
            name    "generate_render_elements"
            label   "Generate Render Elements"
            type    string
            default { "2" }
            help    "How to add the needed render elements (0 - Minimal: Only noiseLevel and defocusAmount; 1 - By Denoiser Type: Only those needed for the specific denoiser type (one-pass or render elements); 2 - Add all possible denoising elements so that denoising type can be switched)"
            menu    {
                "0"   "Minimal"
                "1"  "By Denoiser Type"
                "2"  "All Possible"
            }
            range   { 0 1 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_enumkeys" "0,1,2" }
            parmtag { "vray_plugin" "RenderChannelDenoiser" }
            parmtag { "vray_pluginattr" "generate_render_elements" }
            parmtag { "vray_type" "enum" }
        }
        parm {
            name    "progressive_update"
            label   "Progressive Rendering Update Frequency"
            type    int
            default { "0" }
            help    "Frequency of update during progressive rendering (0 - never; 100 - update as often as possible)"
            range   { 0 100 }
            export  none
            parmtag { "cook_dependent" "1" }
            parmtag { "vray_plugin" "RenderChannelDenoiser" }
            parmtag { "vray_pluginattr" "progressive_update" }
            parmtag { "vray_type" "int" }
        }
    }

#include "vfh_renderchannel_common.ds"
}
